{"version":3,"sources":["store/Web3Store.jsx","component/ConnectWallet/ConnectWallet.jsx","component/Header/Menu.jsx","component/Header/Header.jsx","route/index.jsx","component/ConnectWallet/ConnectWalletInstruction.jsx","component/Loading/Loading.jsx","constants.js","route/ngmi-nft.jsx","route/analytics.jsx","route/why-wagmi.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Web3Context","React","createContext","Web3Store","children","useState","account","setAccount","networkId","setNetworkId","web3","setWeb3","initialized","setInitialized","useEffect","window","ethereum","on","accounts","address","Number","Provider","value","web3Modal","Web3Modal","network","cacheProvider","providerOptions","injected","options","rpc","56","chainId","ConnectWalletButton","useContext","connectWallet","a","connect","provider","Web3","eth","getAccounts","net","getId","danger","className","disabled","onClick","HeaderMenu","Item","to","MainHeader","title","overlay","trigger","arrow","style","color","extra","Title","Typography","IndexPage","justify","direction","size","span","href","target","rel","src","alt","type","level","grey","primary","ConnectWalletInstruction","Loading","contracts","WAGMI_CONTRACT_ADDRESS","wagmiAbiJson","require","WHY_WAGMI_CONTRACT_ADDRESS","whyWagmiAbiJson","NGMI_NFT_CONTRACT_ADDRESS","ngmiAbiJson","utils","BN","Text","NgmiNftPage","loading","setLoading","ngmiNft","setNgmiNft","ngmiContract","Contract","methods","balanceOf","call","name","description","image","maxWidth","strong","numberFormat","Intl","NumberFormat","AnalyticsPage","analytics","setAnalytics","wagmiContract","divisor","pow","totalSupply","toString","circulatingSupply","div","maxSupply","whyWagmiBurnt","console","log","totalBurnt","sub","toNumber","width","data","labels","datasets","label","backgroundColor","borderColor","format","WhyWAGMIPage","whyWagmiData","setWhyWagmiData","whyWagmiMessages","setWhyWagmiMessages","getWhyWagmi","v","whyWAGMIContract","messagesCount","i","messages","message","handleSubmit","e","preventDefault","sendMessage","send","from","then","AntDesignMessage","success","catch","error","handleApproval","approve","mainFunc","WAGMIContract","feeCost","fee","allowance","approvalLimit","hasApproved","mul","lt","onSubmit","placeholder","htmlType","header","itemLayout","dataSource","renderItem","item","author","content","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d00b5b0.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Web3Context = React.createContext({});\n\nexport const Web3Store = ({ children }) => {\n  const [account, setAccount] = React.useState(null);\n  const [networkId, setNetworkId] = React.useState(null);\n  const [web3, setWeb3] = React.useState(null);\n  const [initialized, setInitialized] = React.useState(false);\n\n  React.useEffect(() => {\n    if (initialized) {\n      window.ethereum.on(\"accountsChanged\", function (accounts) {\n        // Time to reload your interface with accounts[0]!\n        const address = accounts[0];\n        setAccount(address);\n      });\n\n      window.ethereum.on(\"networkChanged\", function (networkId) {\n        // Time to reload your interface with the new networkId\n        setNetworkId(Number(networkId));\n      });\n    }\n  }, [initialized]);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        account,\n        setAccount,\n        networkId,\n        setNetworkId,\n        web3,\n        setWeb3,\n        initialized,\n        setInitialized,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","import React from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport { Button, Card } from \"antd\";\nimport { Web3Context } from \"../../store/Web3Store\";\nimport \"./ConnectWallet.css\";\n\nconst providerOptions = {\n  /* See Provider Options Section */\n  injected: {\n    options: {\n      rpc: {\n        56: \"https://bsc-dataseed.binance.org/\",\n      },\n      network: \"binance\",\n      chainId: 56,\n    },\n  },\n};\n\nconst web3Modal = new Web3Modal({\n  network: \"biannce\", // optional\n  cacheProvider: true, // optional\n  providerOptions, // required\n});\n\nexport const ConnectWalletButton = () => {\n  const {\n    account,\n    networkId,\n    setAccount,\n    setNetworkId,\n    setWeb3,\n    setInitialized,\n  } = React.useContext(Web3Context);\n\n  const connectWallet = async () => {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    const address = accounts[0];\n    const networkId = await web3.eth.net.getId();\n    setWeb3(web3);\n    setAccount(address);\n    setNetworkId(networkId);\n    setInitialized(true);\n  };\n\n  if (networkId !== null && networkId !== 56) {\n    // Not BSC\n    return <Button danger>Wrong Network</Button>;\n  } else if (account) {\n    return (\n      <button className=\"connect-wallet ant-btn\" disabled>\n        <span>{account}</span>\n      </button>\n    );\n  }\n  return <Button onClick={connectWallet}>Connect Wallet</Button>;\n};\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeaderMenu = (\n  <Menu>\n    <Menu.Item key=\"0\">\n      <Link to=\"/\">Home</Link>\n    </Menu.Item>\n    <Menu.Item key=\"1\">\n      <Link to=\"/analytics\">Analytics</Link>\n    </Menu.Item>\n    <Menu.Item key=\"2\">\n      <Link to=\"/ngmi-nft\">NGMI NFT</Link>\n    </Menu.Item>\n    <Menu.Item key=\"3\">\n      <Link to=\"/why-wagmi\">Why $WAGMI?</Link>\n    </Menu.Item>\n  </Menu>\n);\n","import React from \"react\";\nimport { Col, Dropdown, PageHeader, Row, Space } from \"antd\";\nimport { ConnectWalletButton } from \"../ConnectWallet/ConnectWallet\";\nimport { Link } from \"react-router-dom\";\nimport { HeaderMenu } from \"./Menu\";\n\nexport const MainHeader = () => {\n  return (\n    <PageHeader\n      className=\"site-page-header\"\n      title={\n        <>\n          <Dropdown overlay={HeaderMenu} trigger={[\"click\"]} arrow>\n            <i className=\"bi bi-list\"></i>\n          </Dropdown>\n          <Link style={{ color: \"black\" }} to=\"/\">\n            WAGMI\n          </Link>\n        </>\n      }\n      extra={[<ConnectWalletButton />]}\n    />\n  );\n};\n","import React from \"react\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { grey } from \"@ant-design/colors\";\n\nconst { Title } = Typography;\n\nexport const IndexPage = () => {\n  return (\n    <Row justify=\"center\">\n      <Space direction=\"vertical\">\n        <Space direction=\"vertical\" size=\"large\">\n          <Row>\n            <Col span={12}>\n              <a\n                href=\"https://bscscan.com/token/0xcddb9f34d6a48e5d051561e6d9fbfc96050cd429\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"image-zoom cover\" src=\"wagmi.png\" alt=\"WAGMI\" />\n              </a>\n            </Col>\n            <Col span={12}>\n              <a\n                href=\"https://bscscan.com/token/0xbe218b17bbf76e8d957e83265087115e2056c5a7\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"image-zoom cover\" src=\"ngmi.png\" alt=\"NGMI\" />\n              </a>\n            </Col>\n          </Row>\n        </Space>\n        <Row type=\"flex\" justify=\"center\">\n          <Col>\n            <Title level={2}>Here's what happens to WAGMI over time</Title>\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col>\n            <img src=\"chart.jpg\" alt=\"chart\" className=\"cover\" />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"space-around\">\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://github.com/WagmiT\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-github\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://twitter.com/wagmit\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-twitter\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://t.me/wagmi_together\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-telegram\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://telegram.me/collablandbot?start=VFBDI1RFTCNDT01NIy0xMDAxNDM3ODA3Njgx\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-telegram\"></i>\n              </a>\n            </Title>\n          </Col>\n        </Row>\n      </Space>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Row, Space, Typography } from \"antd\";\nimport { ConnectWalletButton } from \"./ConnectWallet\";\n\nconst { Title } = Typography;\n\nexport const ConnectWalletInstruction = () => {\n  return (\n    <Row justify=\"center\">\n      <Space size=\"large\" direction=\"vertical\">\n        <Title level={2}>Please connect your wallet to continue</Title>\n        <ConnectWalletButton />\n      </Space>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Row, Spin } from \"antd\";\n\nexport const Loading = () => {\n  return (\n    <Row justify=\"center\">\n      <Spin size=\"large\" />\n    </Row>\n  );\n};\n","export const contracts = {\n  // WAGMI\n  WAGMI_CONTRACT_ADDRESS: \"0xcddb9f34d6a48e5d051561e6d9fbfc96050cd429\",\n  wagmiAbiJson: require(\"./abi/wagmi.json\"),\n  // Why WAGMI\n  WHY_WAGMI_CONTRACT_ADDRESS: \"0xE1C1F67B6FA75cBaf3a170A0470Fa40EfDbe05e6\",\n  whyWagmiAbiJson: require(\"./abi/why_wagmi.json\"),\n  // NGMI NFT\n  NGMI_NFT_CONTRACT_ADDRESS: \"0x854Bd71322Cd05e30E88e04549F91a728F49dEC7\",\n  ngmiAbiJson: require(\"./abi/ngmi_nft.json\"),\n};\n","import React from \"react\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport Web3 from \"web3\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { contracts } from \"../constants\";\n\nconst BN = Web3.utils.BN;\n\nconst { Title, Text } = Typography;\n\nexport const NgmiNftPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [ngmiNft, setNgmiNft] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!!web3 && !!account) {\n      setLoading(true);\n      (async () => {\n        const ngmiContract = new web3.eth.Contract(\n          contracts.ngmiAbiJson,\n          contracts.NGMI_NFT_CONTRACT_ADDRESS\n        );\n        const balanceOf = await ngmiContract.methods.balanceOf(account).call();\n        if (balanceOf !== \"0\") {\n          setNgmiNft({\n            name: \"NGMI NFT\",\n            description: \"You're not gonna make it since u sold WAGMI\",\n            image: \"https://wagmit.github.io/dicpic.jpg\",\n          });\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n\n  if (ngmiNft) {\n    return (\n      <Row justify=\"center\">\n        <Card title=\"Shame on you\">\n          <img\n            style={{ maxWidth: \"300px\" }}\n            className=\"cover\"\n            src={ngmiNft.image}\n            alt={ngmiNft.description}\n          />\n          <br />\n          <Text strong>{ngmiNft.name}</Text>\n          <br />\n          <Text>{ngmiNft.description}</Text>\n        </Card>\n      </Row>\n    );\n  }\n  return (\n    <Row justify=\"center\">\n      <Col>\n        <Title level={2}>You don't own any NGMI NFT</Title>\n        <Text>WAGMI!</Text>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport Web3 from \"web3\";\nimport { Pie } from \"react-chartjs-2\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { contracts } from \"../constants\";\n\nconst BN = Web3.utils.BN;\n\nconst { Title } = Typography;\n\nconst numberFormat = new Intl.NumberFormat(\"en-GB\");\n\nexport const AnalyticsPage = () => {\n  const { web3 } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [analytics, setAnalytics] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!!web3 && loading) {\n      (async () => {\n        const wagmiContract = new web3.eth.Contract(\n          contracts.wagmiAbiJson,\n          contracts.WAGMI_CONTRACT_ADDRESS\n        );\n        const divisor = new BN(10).pow(new BN(18));\n        const circulatingSupply = new BN(\n          (await wagmiContract.methods.totalSupply().call()).toString()\n        ).div(divisor);\n        const maxSupply = new BN(10 ** 9);\n        const whyWagmiBurnt = new BN(\n          await wagmiContract.methods\n            .balanceOf(\"0x0000000000000000000000000000000000000001\")\n            .call()\n        ).div(divisor);\n        console.log(whyWagmiBurnt.toString());\n        const totalBurnt = maxSupply.sub(circulatingSupply).sub(whyWagmiBurnt);\n        setAnalytics({\n          circulatingSupply: circulatingSupply.toNumber(),\n          totalBurnt: totalBurnt.toNumber(),\n          maxSupply: maxSupply.toNumber(),\n          whyWagmiBurnt: whyWagmiBurnt.toNumber(),\n        });\n        setLoading(false);\n      })();\n    }\n  }, [web3]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <Space size=\"large\" direction=\"vertical\" style={{ width: \"100%\" }}>\n        <Row justify=\"center\">\n          <Title level={1}>Were All Gonna Make It ($WAGMI)</Title>\n        </Row>\n        <Row justify=\"center\">\n          <Col>\n            <Pie\n              data={{\n                labels: [\n                  \"Circulating Supply\",\n                  \"Burnt $WAGMI\",\n                  \"Why $WAGMI burnt\",\n                ],\n                datasets: [\n                  {\n                    label: \"WAGMI\",\n                    backgroundColor: [\n                      \"rgba(54, 162, 235, 0.2)\",\n                      \"rgba(255, 99, 132, 0.2)\",\n                      \"rgba(255, 99, 132, 0.2)\",\n                    ],\n                    borderColor: [\n                      \"rgba(54, 162, 235, 1)\",\n                      \"rgba(255, 99, 132, 1)\",\n                      \"rgba(255, 99, 132, 1)\",\n                    ],\n                    data: [\n                      analytics.circulatingSupply,\n                      analytics.totalBurnt,\n                      analytics.whyWagmiBurnt,\n                    ],\n                  },\n                ],\n              }}\n            />\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Card title=\"Max Supply\">\n            {numberFormat.format(analytics.maxSupply)} $WAGMI\n          </Card>\n          <Card title=\"Circulating Supply\">\n            {numberFormat.format(analytics.circulatingSupply)} $WAGMI\n          </Card>\n          <Card title=\"Total Burnt\">\n            {numberFormat.format(analytics.totalBurnt)} $WAGMI\n          </Card>\n          <Card title=\"Total Why $WAGMI Burnt\">\n            {numberFormat.format(analytics.whyWagmiBurnt)} $WAGMI\n          </Card>\n        </Row>\n      </Space>\n      <Space\n        size=\"large\"\n        direction=\"vertical\"\n        style={{ width: \"100%\" }}\n      ></Space>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { contracts } from \"../constants\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport {\n  Col,\n  Row,\n  Typography,\n  Comment,\n  List,\n  Input,\n  Space,\n  Button,\n  message as AntDesignMessage,\n} from \"antd\";\nimport Web3 from \"web3\";\n\nconst BN = Web3.utils.BN;\n\nconst { Title, Text } = Typography;\n\nexport const WhyWAGMIPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [whyWagmiData, setWhyWagmiData] = React.useState(null);\n  const [whyWagmiMessages, setWhyWagmiMessages] = React.useState([]);\n\n  const getWhyWagmi = async () => {\n    setWhyWagmiMessages((v) => []);\n    const whyWAGMIContract = new web3.eth.Contract(\n      contracts.whyWagmiAbiJson,\n      contracts.WHY_WAGMI_CONTRACT_ADDRESS\n    );\n    const messagesCount = await whyWAGMIContract.methods.messagesCount().call();\n    setWhyWagmiData((v) => ({ ...v, messagesCount }));\n    for (let i = Number(messagesCount) - 1; i >= 0; i--) {\n      const message = await whyWAGMIContract.methods.messages(i).call();\n      setWhyWagmiMessages((v) => [...v, message]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const message = e.target.message.value;\n    const whyWAGMIContract = new web3.eth.Contract(\n      contracts.whyWagmiAbiJson,\n      contracts.WHY_WAGMI_CONTRACT_ADDRESS\n    );\n    whyWAGMIContract.methods\n      .sendMessage(message)\n      .send({ from: account })\n      .then(() => {\n        AntDesignMessage.success(\"Message send!\", 10);\n        getWhyWagmi();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n      });\n  };\n\n  const handleApproval = async () => {\n    const WAGMIContract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      contracts.WAGMI_CONTRACT_ADDRESS\n    );\n    WAGMIContract.methods\n      .approve(\n        contracts.WHY_WAGMI_CONTRACT_ADDRESS,\n        \"115792089237316195423570985008687907853269984665640564020457584007913129639935\"\n      )\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(\"$WAGMI Contract Approved!\", 10);\n        mainFunc();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n      });\n  };\n\n  const mainFunc = async () => {\n    const whyWAGMIContract = new web3.eth.Contract(\n      contracts.whyWagmiAbiJson,\n      contracts.WHY_WAGMI_CONTRACT_ADDRESS\n    );\n    const WAGMIContract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      contracts.WAGMI_CONTRACT_ADDRESS\n    );\n    const fee = (await whyWAGMIContract.methods.feeCost().call()) * 10;\n    const approvalLimit = await WAGMIContract.methods\n      .allowance(account, contracts.WHY_WAGMI_CONTRACT_ADDRESS)\n      .call();\n    setWhyWagmiData({\n      fee,\n      hasApproved: new BN(fee)\n        .mul(new BN(10).pow(new BN(18)))\n        .lt(new BN(approvalLimit)),\n    });\n    setLoading(false);\n    await getWhyWagmi();\n  };\n\n  React.useEffect(() => {\n    if (!!web3 && !!account) {\n      mainFunc();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Row justify=\"center\">\n      <Space direction=\"vertical\">\n        <Row justify=\"center\">\n          <Col>\n            <Title level={2}>Why $WAGMI?</Title>\n          </Col>\n        </Row>\n        <Row>\n          <Text>{whyWagmiData.fee} $WAGMI is needed for sending a message</Text>\n        </Row>\n        <Row justify=\"center\">\n          {whyWagmiData.hasApproved ? (\n            <form onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <Input name=\"message\" placeholder=\"Enter messages\" />\n                </Col>\n                <Col>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </form>\n          ) : (\n            <Button onClick={handleApproval}>Approve $WAGMI</Button>\n          )}\n        </Row>\n        <Row justify=\"center\">\n          <Col>\n            <List\n              header={`${whyWagmiData.messagesCount || \"-\"} replies`}\n              itemLayout=\"horizontal\"\n              dataSource={whyWagmiMessages}\n              renderItem={(item) => (\n                <li>\n                  <Comment author={item.author} content={item.message} />\n                </li>\n              )}\n            />\n          </Col>\n        </Row>\n      </Space>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { MainHeader } from \"./component/Header/Header\";\nimport { IndexPage } from \"./route\";\nimport { Web3Store } from \"./store/Web3Store\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { NgmiNftPage } from \"./route/ngmi-nft\";\nimport { AnalyticsPage } from \"./route/analytics\";\nimport { WhyWAGMIPage } from \"./route/why-wagmi\";\n\nfunction App() {\n  return (\n    <Web3Store>\n      <Router>\n        <div>\n          <MainHeader />\n          <Switch>\n            <Route path=\"/ngmi-nft\">\n              <NgmiNftPage />\n            </Route>\n            <Route path=\"/analytics\">\n              <AnalyticsPage />\n            </Route>\n            <Route path=\"/why-wagmi\">\n              <WhyWAGMIPage />\n            </Route>\n            <Route path=\"/\">\n              <IndexPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Web3Store>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}