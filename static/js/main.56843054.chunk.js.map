{"version":3,"sources":["store/Web3Store.jsx","component/ConnectWallet/ConnectWallet.jsx","component/Header/Menu.jsx","component/Header/Header.jsx","route/index.jsx","component/ConnectWallet/ConnectWalletInstruction.jsx","component/Loading/Loading.jsx","constants.js","route/ngmi-nft.jsx","route/analytics.jsx","route/why-wagmi.jsx","route/bridge.jsx","component/Farm/DepositWithdrawInput.jsx","component/Farm/Farm.jsx","route/staking.jsx","route/xwagmi.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Web3Context","React","createContext","Web3Store","children","useState","account","setAccount","networkId","setNetworkId","web3","setWeb3","initialized","setInitialized","useEffect","window","ethereum","on","accounts","address","Number","Provider","value","web3Modal","Web3Modal","network","cacheProvider","providerOptions","injected","options","rpc","56","chainId","ConnectWalletButton","useContext","connectWallet","a","connect","provider","Web3","eth","getAccounts","net","getId","danger","className","disabled","onClick","HeaderMenu","Item","to","MainHeader","title","overlay","trigger","arrow","style","color","extra","Title","Typography","IndexPage","justify","direction","size","span","href","target","rel","src","alt","type","level","grey","primary","ConnectWalletInstruction","Loading","BN","BigNumber","config","DECIMAL_PLACES","numberFormat","Intl","NumberFormat","divisor","pow","contracts","WAGMI_CONTRACT_ADDRESS","wagmiAbiJson","require","WHY_WAGMI_CONTRACT_ADDRESS","whyWagmiAbiJson","NGMI_NFT_CONTRACT_ADDRESS","ngmiAbiJson","wagmiV2AbiJson","xWagmiAbiJson","masterChefAbiJson","pancakeV2LpAbiJson","WAGMI_V1_BNB_PANCAKE_V2_LP_ADDRESS","utils","Text","NgmiNftPage","loading","setLoading","ngmiNft","setNgmiNft","ngmiContract","Contract","methods","balanceOf","call","name","description","image","maxWidth","strong","AnalyticsPage","analytics","setAnalytics","setBnbPrice","fetch","then","res","json","data","binancecoin","usd","cgBnbPrice","wagmiContract","pancakeLpContract","getReserves","wagmiReserve","reserve0","reserve1","wagmiUsdPrice","console","log","totalSupply","toString","circulatingSupply","div","maxSupply","whyWagmiBurnt","totalBurnt","sub","toNumber","width","labels","datasets","label","backgroundColor","borderColor","format","WhyWAGMIPage","whyWagmiData","setWhyWagmiData","whyWagmiMessages","setWhyWagmiMessages","getWhyWagmi","v","whyWAGMIContract","messagesCount","i","messages","message","handleSubmit","e","preventDefault","sendMessage","send","from","AntDesignMessage","success","catch","error","handleApproval","approve","mainFunc","WAGMIContract","feeCost","fee","allowance","approvalLimit","hasApproved","times","lt","onSubmit","placeholder","htmlType","header","itemLayout","dataSource","renderItem","item","author","content","WAGMI_V1_ADDRESS","WAGMI_V2_ADDRESS","BridgePage","bridgeData","setBridgeData","wagmiV1Contract","bridge","migrateFromV1toV2","wagmiV2Contract","balanceOfV1","balanceOfV2","DepositWithdrawInput","maxAmount","symbol","amount","setAmount","handleInputChange","onChange","suffix","FarmCard","maxDepositAmount","maxWithdrawAmount","isApprove","pendingReward","depositCoinSymbol","withdrawCoinSymbol","details","deposit","withdraw","harvest","showDetails","setShowDetails","modalVisible","setModalVisible","onOk","modal","setModal","onCancel","handleDeposit","visible","MASTER_CHEF_ADDRESS","PANCAKE_LP_ADDRESS","StakingPage","bnbPrice","stakingData","setStakingData","getWagmiPrice","reserve","wagmiBnbPrice","d","handleReload","masterChefLpContract","wagmiV2BnbLpAmount","userInfo","masterChefLpAmount","approveLimit","pendingWagmi","wagmiPerBlock","totalStakedOfLp","percentOfPoolOwned","setInterval","TabPane","Tabs","XWAGMI_ADDRESS","XWagmiPage","xWagmiData","setXWagmiData","xWagmiContract","wagmiV2Balance","xWagmiBalance","isApproved","defaultActiveKey","tab","enter","leave","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mhjCAEaA,EAAcC,IAAMC,cAAc,IAElCC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACXH,IAAMI,SAAS,MADJ,mBAClCC,EADkC,KACzBC,EADyB,OAEPN,IAAMI,SAAS,MAFR,mBAElCG,EAFkC,KAEvBC,EAFuB,OAGjBR,IAAMI,SAAS,MAHE,mBAGlCK,EAHkC,KAG5BC,EAH4B,OAIHV,IAAMI,UAAS,GAJZ,mBAIlCO,EAJkC,KAIrBC,EAJqB,KAqBzC,OAfAZ,IAAMa,WAAU,WACVF,IACFG,OAAOC,SAASC,GAAG,mBAAmB,SAAUC,GAE9C,IAAMC,EAAUD,EAAS,GACzBX,EAAWY,MAGbJ,OAAOC,SAASC,GAAG,kBAAkB,SAAUT,GAE7CC,EAAaW,OAAOZ,UAGvB,CAACI,IAGF,cAACZ,EAAYqB,SAAb,CACEC,MAAO,CACLhB,UACAC,aACAC,YACAC,eACAC,OACAC,UACAC,cACAC,kBATJ,SAYGT,KClBDmB,G,OAAY,IAAIC,IAAU,CAC9BC,QAAS,UACTC,eAAe,EACfC,gBAhBsB,CAEtBC,SAAU,CACRC,QAAS,CACPC,IAAK,CACHC,GAAI,qCAENN,QAAS,UACTO,QAAS,SAWFC,EAAsB,WAAO,IAAD,EAQnChC,IAAMiC,WAAWlC,GANnBM,EAFqC,EAErCA,QACAE,EAHqC,EAGrCA,UACAD,EAJqC,EAIrCA,WACAE,EALqC,EAKrCA,aACAE,EANqC,EAMrCA,QACAE,EAPqC,EAOrCA,eAGIsB,EAAa,uCAAG,oCAAAC,EAAA,sEACGb,EAAUc,UADb,cACdC,EADc,OAEd5B,EAAO,IAAI6B,IAAKD,GAFF,SAGG5B,EAAK8B,IAAIC,cAHZ,cAGdvB,EAHc,OAIdC,EAAUD,EAAS,GAJL,UAKIR,EAAK8B,IAAIE,IAAIC,QALjB,QAKdnC,EALc,OAMpBG,EAAQD,GACRH,EAAWY,GACXV,EAAaD,GACbK,GAAe,GATK,4CAAH,qDAYnB,OAAkB,OAAdL,GAAoC,KAAdA,EAEjB,cAAC,IAAD,CAAQoC,QAAM,EAAd,2BACEtC,EAEP,wBAAQuC,UAAU,yBAAyBC,UAAQ,EAAnD,SACE,+BAAOxC,MAIN,cAAC,IAAD,CAAQyC,QAASZ,EAAjB,6B,iBCtDIa,EACX,eAAC,IAAD,WACE,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,mBADa,KAGf,cAAC,IAAKD,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,wBADa,KAGf,cAAC,IAAKD,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,YAAT,uBADa,KAGf,cAAC,IAAKD,KAAN,UACE,cAAC,IAAD,CAAMC,GAAG,aAAT,0BADa,QCTNC,EAAa,WACxB,OACE,cAAC,IAAD,CACEN,UAAU,mBACVO,MACE,qCACE,cAAC,IAAD,CAAUC,QAASL,EAAYM,QAAS,CAAC,SAAUC,OAAK,EAAxD,SACE,mBAAGV,UAAU,iBAEf,cAAC,IAAD,CAAMW,MAAO,CAAEC,MAAO,SAAWP,GAAG,IAApC,sBAKJQ,MAAO,CAAC,cAAC,EAAD,Q,4CChBNC,EAAUC,IAAVD,MAEKE,EAAY,WACvB,OACE,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACE,cAAC,IAAD,CAAOA,UAAU,WAAWC,KAAK,QAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,mBACEC,KAAK,uEACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,qBAAKvB,UAAU,mBAAmBwB,IAAI,YAAYC,IAAI,cAG1D,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,mBACEC,KAAK,uEACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,qBAAKvB,UAAU,mBAAmBwB,IAAI,WAAWC,IAAI,kBAK7D,cAAC,IAAD,CAAKC,KAAK,OAAOT,QAAQ,SAAzB,SACE,cAAC,IAAD,UACE,cAACH,EAAD,CAAOa,MAAO,EAAd,wDAGJ,cAAC,IAAD,CAAKD,KAAK,OAAOT,QAAQ,SAAzB,SACE,cAAC,IAAD,UACE,qBAAKO,IAAI,YAAYC,IAAI,QAAQzB,UAAU,cAG/C,eAAC,IAAD,CAAK0B,KAAK,OAAOT,QAAQ,eAAzB,UACE,cAAC,IAAD,UACE,cAACH,EAAD,CAAOa,MAAO,EAAd,SACE,mBACEN,KAAK,4BACLC,OAAO,SACPC,IAAI,sBACJZ,MAAO,CAAEC,MAAOgB,IAAKC,SAJvB,SAME,mBAAG7B,UAAU,uBAInB,cAAC,IAAD,UACE,cAACc,EAAD,CAAOa,MAAO,EAAd,SACE,mBACEN,KAAK,6BACLC,OAAO,SACPC,IAAI,sBACJZ,MAAO,CAAEC,MAAOgB,IAAKC,SAJvB,SAME,mBAAG7B,UAAU,wBAInB,cAAC,IAAD,UACE,cAACc,EAAD,CAAOa,MAAO,EAAd,SACE,mBACEN,KAAK,8BACLC,OAAO,SACPC,IAAI,sBACJZ,MAAO,CAAEC,MAAOgB,IAAKC,SAJvB,SAME,mBAAG7B,UAAU,yBAInB,cAAC,IAAD,UACE,cAACc,EAAD,CAAOa,MAAO,EAAd,SACE,mBACEN,KAAK,+EACLC,OAAO,SACPC,IAAI,sBACJZ,MAAO,CAAEC,MAAOgB,IAAKC,SAJvB,SAME,mBAAG7B,UAAU,kC,iBCnFrBc,EAAUC,IAAVD,MAEKgB,EAA2B,WACtC,OACE,cAAC,IAAD,CAAKb,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOE,KAAK,QAAQD,UAAU,WAA9B,UACE,cAAC,EAAD,CAAOS,MAAO,EAAd,oDACA,cAAC,EAAD,U,SCRKI,EAAU,WACrB,OACE,cAAC,IAAD,CAAKd,QAAQ,SAAb,SACE,cAAC,IAAD,CAAME,KAAK,a,kBCJJa,EAAKC,IAClBA,IAAUC,OAAO,CAAEC,eAAgB,IAC5B,IAAMC,EAAe,IAAIC,KAAKC,aAAa,SACrCC,EAAU,IAAIP,EAAG,IAAIQ,IAAI,IAAIR,EAAG,KAEhCS,EAAY,CAEvBC,uBAAwB,6CACxBC,aAAcC,EAAQ,KAEtBC,2BAA4B,6CAC5BC,gBAAiBF,EAAQ,KAEzBG,0BAA2B,6CAC3BC,YAAaJ,EAAQ,KAErBK,eAAgBL,EAAQ,KAExBM,cAAeN,EAAQ,KAEvBO,kBAAmBP,EAAQ,KAE3BQ,mBAAoBR,EAAQ,KAC5BS,mCACE,8CChBIvC,GAFGpB,IAAK4D,MAAMtB,GAEEjB,IAAhBD,OAAOyC,EAASxC,IAATwC,KAEFC,EAAc,WAAO,IAAD,EACLpG,IAAMiC,WAAWlC,GAAnCU,EADuB,EACvBA,KAAMJ,EADiB,EACjBA,QADiB,EAEDL,IAAMI,UAAS,GAFd,mBAExBiG,EAFwB,KAEfC,EAFe,OAGDtG,IAAMI,SAAS,MAHd,mBAGxBmG,EAHwB,KAGfC,EAHe,KA2B/B,OAtBAxG,IAAMa,WAAU,WACRJ,GAAUJ,IACdiG,GAAW,GACX,sBAAC,4BAAAnE,EAAA,6DACOsE,EAAe,IAAIhG,EAAK8B,IAAImE,SAChCrB,EAAUO,YACVP,EAAUM,2BAHb,SAKyBc,EAAaE,QAAQC,UAAUvG,GAASwG,OALjE,OAMmB,MANnB,QAOGL,EAAW,CACTM,KAAM,WACNC,YAAa,8CACbC,MAAO,wCAIXV,GAAW,GAdZ,0CAAD,MAiBD,CAACjG,IAECI,EAEM4F,EACF,cAAC,EAAD,IAGLE,EAEA,cAAC,IAAD,CAAK1C,QAAQ,SAAb,SACE,eAAC,IAAD,CAAMV,MAAM,eAAZ,UACE,qBACEI,MAAO,CAAE0D,SAAU,SACnBrE,UAAU,QACVwB,IAAKmC,EAAQS,MACb3C,IAAKkC,EAAQQ,cAEf,uBACA,cAACZ,EAAD,CAAMe,QAAM,EAAZ,SAAcX,EAAQO,OACtB,uBACA,cAACX,EAAD,UAAOI,EAAQQ,mBAMrB,cAAC,IAAD,CAAKlD,QAAQ,SAAb,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAOU,MAAO,EAAd,wCACA,cAAC4B,EAAD,0BA3BG,cAAC,EAAD,K,SC/BHzC,EAAUC,IAAVD,MAEFsB,EAAe,IAAIC,KAAKC,aAAa,SAE9BiC,EAAgB,WAAO,IAC1B1G,EAAST,IAAMiC,WAAWlC,GAA1BU,KADyB,EAEHT,IAAMI,UAAS,GAFZ,mBAE1BiG,EAF0B,KAEjBC,EAFiB,OAGCtG,IAAMI,SAAS,MAHhB,mBAG1BgH,EAH0B,KAGfC,EAHe,OAIDrH,IAAMI,SAAS,MAJd,mBAIhBkH,GAJgB,WA4DjC,OA3CAtH,IAAMa,WAAU,WACRJ,GAAQ4F,GACZ,sBAAC,kDAAAlE,EAAA,sEAZIoF,MACL,mFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEL,OADAL,EAAYK,EAAKC,YAAYC,KACtBF,EAAKC,YAAYC,OAMzB,cACOC,EADP,OAEOC,EAAgB,IAAItH,EAAK8B,IAAImE,SACjCrB,EAAUE,aACVF,EAAUC,wBAEN0C,EAAoB,IAAIvH,EAAK8B,IAAImE,SACrCrB,EAAUW,mBACVX,EAAUY,oCARb,SAU4B+B,EAAkBrB,QAC1CsB,cACApB,OAZJ,cAUOqB,EAVP,OAaOC,EAAWD,EAAY,UACvBE,EAAWF,EAAY,UAEvBG,EADgBF,EAAWC,EACKN,EACtCQ,QAAQC,IAAIF,GACNlD,EAAU,IAAIP,EAAG,IAAIQ,IAAI,IAAIR,EAAG,KAlBvC,KAmB+BA,EAnB/B,UAoBUmD,EAAcpB,QAAQ6B,cAAc3B,OApB9C,2BAoBsD4B,WAD/CC,EAnBP,eAqBGC,IAAIxD,GACAyD,EAAY,IAAIhE,EAAJ,SAAO,GAAM,IAtBhC,KAuB2BA,EAvB3B,UAwBSmD,EAAcpB,QACjBC,UAAU,8CACVC,OA1BN,oBAuBOgC,EAvBP,eA2BGF,IAAIxD,GACA2D,EAAaF,EAAUG,IAAIL,GAAmBK,IAAIF,GACxDxB,EAAa,CACXqB,kBAAmBA,EAAkBM,WACrCF,WAAYA,EAAWE,WACvBJ,UAAWA,EAAUI,WACrBH,cAAeA,EAAcG,WAC7BX,cAAeA,IAEjB/B,GAAW,GApCZ,2CAAD,KAuCD,CAAC7F,IAECA,EAEM4F,EACF,cAAC,EAAD,IAGP,qCACE,eAAC,IAAD,CAAOtC,KAAK,QAAQD,UAAU,WAAWP,MAAO,CAAE0F,MAAO,QAAzD,UACE,cAAC,IAAD,CAAKpF,QAAQ,SAAb,SACE,cAAC,EAAD,CAAOU,MAAO,EAAd,+CAEF,cAAC,IAAD,CAAKV,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE8D,KAAM,CACJuB,OAAQ,CACN,qBACA,eACA,oBAEFC,SAAU,CACR,CACEC,MAAO,QACPC,gBAAiB,CACf,0BACA,0BACA,2BAEFC,YAAa,CACX,wBACA,wBACA,yBAEF3B,KAAM,CACJP,EAAUsB,kBACVtB,EAAU0B,WACV1B,EAAUyB,wBAQxB,eAAC,IAAD,CAAKhF,QAAQ,SAAb,UACE,cAAC,IAAD,CAAKG,KAAM,EAAX,SACE,eAAC,IAAD,CAAMb,MAAM,eAAZ,cAA6BiE,EAAUiB,mBAEzC,cAAC,IAAD,CAAKrE,KAAM,EAAX,SACE,eAAC,IAAD,CAAMb,MAAM,aAAZ,cAEG6B,EAAauE,OACZnC,EAAUiB,cAAgBjB,EAAUsB,wBAI1C,cAAC,IAAD,CAAK1E,KAAM,EAAX,SACE,eAAC,IAAD,CAAMb,MAAM,aAAZ,UACG6B,EAAauE,OAAOnC,EAAUwB,WADjC,eAIF,cAAC,IAAD,CAAK5E,KAAM,EAAX,SACE,eAAC,IAAD,CAAMb,MAAM,qBAAZ,UACG6B,EAAauE,OAAOnC,EAAUsB,mBADjC,eAIF,cAAC,IAAD,CAAK1E,KAAM,EAAX,SACE,eAAC,IAAD,CAAMb,MAAM,cAAZ,UACG6B,EAAauE,OAAOnC,EAAU0B,YADjC,eAIF,cAAC,IAAD,CAAK9E,KAAM,EAAX,SACE,eAAC,IAAD,CAAMb,MAAM,yBAAZ,UACG6B,EAAauE,OAAOnC,EAAUyB,eADjC,qBAMN,cAAC,IAAD,CACE9E,KAAK,QACLD,UAAU,WACVP,MAAO,CAAE0F,MAAO,aAhFb,cAAC,EAAD,K,yDCxDLrE,GAAKtC,IAAK4D,MAAMtB,GAEdlB,GAAgBC,IAAhBD,MAAOyC,GAASxC,IAATwC,KAEFqD,GAAe,WAAO,IAAD,EACNxJ,IAAMiC,WAAWlC,GAAnCU,EADwB,EACxBA,KAAMJ,EADkB,EAClBA,QADkB,EAEFL,IAAMI,UAAS,GAFb,mBAEzBiG,EAFyB,KAEhBC,EAFgB,OAGQtG,IAAMI,SAAS,MAHvB,mBAGzBqJ,EAHyB,KAGXC,EAHW,OAIgB1J,IAAMI,SAAS,IAJ/B,mBAIzBuJ,EAJyB,KAIPC,EAJO,KAM1BC,EAAW,uCAAG,kCAAA1H,EAAA,6DAClByH,GAAoB,SAACE,GAAD,MAAO,MACrBC,EAAmB,IAAItJ,EAAK8B,IAAImE,SACpCrB,EAAUK,gBACVL,EAAUI,4BAJM,SAMUsE,EAAiBpD,QAAQqD,gBAAgBnD,OANnD,OAMZmD,EANY,OAOlBN,GAAgB,SAACI,GAAD,oBAAC,gBAAYA,GAAb,IAAgBE,qBAPd,IAAA7H,EAAA,iBAQT8H,GARS,eAAA9H,EAAA,sEASM4H,EAAiBpD,QAAQuD,SAASD,GAAGpD,OAT3C,OASVsD,EATU,OAUhBP,GAAoB,SAACE,GAAD,4BAAWA,GAAX,CAAcK,OAVlB,0CAQTF,EAAI9I,OAAO6I,GAAiB,EARnB,YAQsBC,GAAK,GAR3B,0CAQTA,GARS,iBAQ8BA,IAR9B,2DAAH,qDAcXG,EAAY,uCAAG,WAAOC,GAAP,eAAAlI,EAAA,sDACnBkI,EAAEC,iBACIH,EAAUE,EAAEnG,OAAOiG,QAAQ9I,MACR,IAAIZ,EAAK8B,IAAImE,SACpCrB,EAAUK,gBACVL,EAAUI,4BAEKkB,QACd4D,YAAYJ,GACZK,KAAK,CAAEC,KAAMpK,IACbmH,MAAK,WACJkD,KAAiBC,QAAQ,gBAAiB,IAC1Cd,OAEDe,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,OAfvB,2CAAH,sDAmBZW,EAAc,uCAAG,sBAAA3I,EAAA,sDACC,IAAI1B,EAAK8B,IAAImE,SACjCrB,EAAUE,aACVF,EAAUC,wBAEEqB,QACXoE,QACC1F,EAAUI,2BACV,kFAED+E,KAAK,CACJC,KAAMpK,IAEPmH,MAAK,WACJkD,KAAiBC,QAAQ,4BAA6B,IACtDK,OAEDJ,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,OAlBrB,2CAAH,qDAsBda,EAAQ,uCAAG,kCAAA7I,EAAA,6DACT4H,EAAmB,IAAItJ,EAAK8B,IAAImE,SACpCrB,EAAUK,gBACVL,EAAUI,4BAENwF,EAAgB,IAAIxK,EAAK8B,IAAImE,SACjCrB,EAAUE,aACVF,EAAUC,wBAPG,SASIyE,EAAiBpD,QAAQuE,UAAUrE,OATvC,0BASTsE,EAA0D,GATjD,cAUaF,EAActE,QACvCyE,UAAU/K,EAASgF,EAAUI,4BAC7BoB,OAZY,cAUTwE,EAVS,OAaf3B,EAAgB,CACdyB,MACAG,YAAa,IAAI1G,GAAGuG,GACjBI,MAAM,IAAI3G,GAAG,IAAIQ,IAAI,IAAIR,GAAG,MAC5B4G,GAAG,IAAI5G,GAAGyG,MAEf/E,GAAW,GAnBI,UAoBTuD,IApBS,4CAAH,qDA6Bd,OANA7J,IAAMa,WAAU,WACRJ,GAAUJ,GACd2K,MAED,CAAC3K,IAECI,EAEM4F,EACF,cAAC,EAAD,IAIP,cAAC,IAAD,CAAKxC,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACE,cAAC,IAAD,CAAKD,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,cAAC,GAAD,CAAOU,MAAO,EAAd,6BAGJ,cAAC,IAAD,UACE,eAAC,GAAD,WAAOkF,EAAa0B,IAApB,+CAEF,cAAC,IAAD,CAAKtH,QAAQ,SAAb,SACG4F,EAAa6B,YACZ,sBAAMG,SAAUrB,EAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAOtD,KAAK,UAAU4E,YAAY,qBAEpC,cAAC,IAAD,UACE,cAAC,IAAD,CAAQpH,KAAK,UAAUqH,SAAS,SAAhC,2BAON,cAAC,IAAD,CAAQ7I,QAASgI,EAAjB,8BAGJ,cAAC,IAAD,CAAKjH,QAAQ,SAAb,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACE+H,OAAM,UAAKnC,EAAaO,eAAiB,IAAnC,YACN6B,WAAW,aACXC,WAAYnC,EACZoC,WAAY,SAACC,GAAD,OACV,6BACE,cAAC,KAAD,CAASC,OAAQD,EAAKC,OAAQC,QAASF,EAAK7B,wBA1CnD,cAAC,EAAD,KClGHzG,GAAgBC,IAAhBD,MAAOyC,GAASxC,IAATwC,KAGTgG,GAAmB,6CACnBC,GAAmB,6CAEZC,GAAa,WAAO,IAAD,EACJrM,IAAMiC,WAAWlC,GAAnCU,EADsB,EACtBA,KAAMJ,EADgB,EAChBA,QADgB,EAEAL,IAAMI,UAAS,GAFf,mBAEvBiG,EAFuB,KAEdC,EAFc,OAGMtG,IAAMI,SAAS,MAHrB,mBAGvBkM,EAHuB,KAGXC,EAHW,KAKxBzB,EAAc,uCAAG,4BAAA3I,EAAA,6DACfqK,EAAkB,IAAI/L,EAAK8B,IAAImE,SACnCrB,EAAUE,aACV4G,IAHmB,kBAKdK,EAAgB7F,QACpBoE,QACCqB,GACA,kFAED5B,KAAK,CACJC,KAAMpK,IAEPmH,MAAK,WACJkD,KAAiBC,QAAQ,4BAA6B,IACtDK,OAEDJ,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,QAlBrB,2CAAH,qDAsBdsC,EAAM,uCAAG,sBAAAtK,EAAA,sDACW,IAAI1B,EAAK8B,IAAImE,SACnCrB,EAAUQ,eACVuG,IAEczF,QACb+F,oBACAlC,KAAK,CAAEC,KAAMpK,IACbmH,MAAK,WACJkD,KAAiBC,QAAQ,4BAA6B,IACtDK,OAEDJ,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,OAb7B,2CAAH,qDAiBNa,EAAQ,uCAAG,oCAAA7I,EAAA,6DACTqK,EAAkB,IAAI/L,EAAK8B,IAAImE,SACnCrB,EAAUE,aACV4G,IAEIQ,EAAkB,IAAIlM,EAAK8B,IAAImE,SACnCrB,EAAUE,aACV6G,IAPa,KAUSxH,EAVT,SAWP4H,EAAgB7F,QAAQC,UAAUvG,GAASwG,OAXpC,0BAUT+F,EAVS,eAYbjE,IAAIxD,GAZS,KAaSP,EAbT,UAcP+H,EAAgBhG,QAAQC,UAAUvG,GAASwG,OAdpC,2BAaTgG,EAbS,eAeblE,IAAIxD,GAfS,KAgBWP,EAhBX,UAiBP4H,EAAgB7F,QAAQyE,UAAU/K,EAAS+L,IAAkBvF,OAjBtD,oBAgBTwE,EAhBS,eAkBb1C,IAAIxD,GACNoH,EAAc,CACZK,YAAaA,EAAY5D,WACzB6D,YAAaA,EAAY7D,WACzBsC,YAAasB,EAAYpB,GAAGH,KAE9B/E,GAAW,GAxBI,4CAAH,qDAiCd,OANAtG,IAAMa,WAAU,WACRJ,GAAUJ,GACd2K,MAED,CAAC3K,IAECI,EAEM4F,EACF,cAAC,EAAD,IAGP,cAAC,IAAD,CAAKxC,QAAQ,SAAb,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,GAAD,CAAOU,MAAO,EAAd,gDAEF,cAAC,IAAD,UACE,cAAC,GAAD,6DAEF,uBACA,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAKV,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOC,UAAU,WAAWC,KAAK,SAAjC,UACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAMmD,QAAM,EAAZ,oCACClC,EAAauE,OAAO+C,EAAWM,aAFlC,YAIA,eAAC,IAAD,WACE,cAAC,GAAD,CAAM1F,QAAM,EAAZ,oCACClC,EAAauE,OAAO+C,EAAWO,aAFlC,eAIA,cAAC,IAAD,CAAKhJ,QAAQ,SAAb,SACIyI,EAAWhB,YAKX,eAAC,IAAD,CAAQhH,KAAK,UAAUxB,QAAS2J,EAAhC,oBACUH,EAAWM,YADrB,aAJA,cAAC,IAAD,CAAQtI,KAAK,UAAUxB,QAASgI,EAAhC,mCA5BP,cAAC,EAAD,K,UChGH3E,GAASxC,IAATwC,KAEK2G,GAAuB,SAAC,GAK9B,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UAEMC,EAAoB,SAAC9C,GACzB6C,EAAU/L,OAAOkJ,EAAEnG,OAAO7C,SAE5B,OACE,eAAC,IAAD,CAAOyC,UAAU,WAAjB,UACE,cAAC,IAAD,CAAKD,QAAQ,MAAb,SACE,eAAC,GAAD,WACGkJ,EADH,IACeC,EADf,kBAIF,cAAC,KAAD,CACE3L,MAAO4L,EACPG,SAAUD,EACVE,OACE,gCACE,eAAC,GAAD,CAAMnG,QAAM,EAAZ,UAAc8F,EAAd,OADF,QAEE,cAAC,IAAD,CACElK,QAAS,WACPqK,EAAkB,CAAEjJ,OAAQ,CAAE7C,MAAO0L,MAFzC,0BCvBJ5G,GAASxC,IAATwC,KAEKmH,GAAW,SAAC,GAelB,IAdLnK,EAcI,EAdJA,MACAoK,EAaI,EAbJA,iBACAC,EAYI,EAZJA,kBACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,cACAC,EASI,EATJA,kBACAC,EAQI,EARJA,mBACA7G,EAOI,EAPJA,YACAC,EAMI,EANJA,MACA6G,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAhD,EAEI,EAFJA,QAEI,KADJiD,QAEsChO,IAAMI,UAAS,IADjD,mBACG6N,EADH,KACgBC,EADhB,OAEoClO,IAAMI,UAAS,GAFnD,mBAEG+N,EAFH,KAEiBC,EAFjB,OAGsBpO,IAAMI,SAAS,CAAE+C,MAAO,GAAIkL,KAAM,eAHxD,mBAGGC,EAHH,KAGUC,EAHV,OAIwBvO,IAAMI,SAAS,GAJvC,mBAIG6M,EAJH,KAIWC,EAJX,KAMEsB,EAAW,WACfJ,GAAgB,IAGZK,EAAgB,WACpBvB,EAAU,GACVqB,EAAS,CACPpL,MAAM,WAAD,OAAaA,EAAb,WACLkL,KAAMP,EACNU,WACAxB,OAAQW,EACRZ,UAAWQ,IAEba,GAAgB,IAelB,OACE,qCACE,cAAC,KAAD,wDAEIM,QAASP,GACNG,GAHP,IAIID,KAAMC,EAAMD,KAAKpB,MAJrB,aAOE,cAAC,GAAD,CACEF,UAAWuB,EAAMvB,UACjBC,OAAQsB,EAAMtB,OACdC,OAAQA,EACRC,UAAWA,OAGf,eAAC,IAAD,CAAM/J,MAAOA,EAAOM,MAAOuD,EAA3B,UACE,cAAC,GAAD,UAAOD,IACP,uBACA,uBACC0G,EACC,qCACE,cAAC,IAAD,UACGC,GACC,mCACE,eAAC,IAAD,CAAK1J,KAAM,GAAX,UACE,cAAC,GAAD,CAAMkD,QAAM,EAAZ,4BACA,uBACA,cAAC,GAAD,UAAOwG,WAKf,eAAC,IAAD,WACE,eAAC,IAAD,CAAK1J,KAAM,GAAX,UACE,eAAC,GAAD,CAAMkD,QAAM,EAAZ,UAAc/D,EAAd,cACA,uBACA,cAAC,GAAD,UAAOqK,OAET,cAAC,IAAD,CAAKxJ,KAAM,EAAX,SACE,cAAC,IAAD,CAAKH,QAAQ,eAAb,SACG2J,EACC,qCACE,cAAC,IAAD,CAAQ1K,QAvDL,WACrBoK,EAAU,GACVqB,EAAS,CACPpL,MAAM,YAAD,OAAcA,EAAd,WACLkL,KAAMN,EACNS,WACAxB,OAAQY,EACRb,UAAWS,IAEbY,GAAgB,IA8CmC9J,KAAK,UAAtC,eAGA,cAAC,IAAD,CAAQxB,QAAS2L,EAAenK,KAAK,UAArC,kBAKF,cAAC,IAAD,CAAQxB,QAAS2L,EAAjB,6BAOV,cAAC,IAAD,CAAK5K,QAAQ,SAAb,SACE,cAAC,IAAD,CAAQS,KAAK,UAAUxB,QAASiI,EAAhC,gCAKJ,uBACCkD,EACC,qCACE,cAAC,IAAD,CACEpK,QAAQ,SACRjB,UAAU,SACVE,QAAS,kBAAMoL,GAAe,IAHhC,SAKE,eAAC,GAAD,mBACO,mBAAGtL,UAAU,6BAGtB,cAAC,IAAD,UAAMiL,OAGR,cAAC,IAAD,CACEhK,QAAQ,SACRjB,UAAU,SACVE,QAAS,kBAAMoL,GAAe,IAHhC,SAKE,eAAC,GAAD,sBACU,mBAAGtL,UAAU,sCC7H7B+L,GAAsB,6CACtBC,GAAqB,6CAEnBzI,GAASxC,IAATwC,KAEK0I,GAAc,WAAO,IAAD,EACL7O,IAAMiC,WAAWlC,GAAnCU,EADuB,EACvBA,KAAMJ,EADiB,EACjBA,QADiB,EAEDL,IAAMI,UAAS,GAFd,mBAExBiG,EAFwB,KAEfC,EAFe,OAGCtG,IAAMI,SAAS,MAHhB,mBAGxB0O,EAHwB,KAGdxH,EAHc,OAIOtH,IAAMI,SAAS,IAJtB,mBAIxB2O,EAJwB,KAIXC,EAJW,KAiBzBC,EAAa,uCAAG,wCAAA9M,EAAA,sEAVboF,MACL,mFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEL,OADAL,EAAYK,EAAKC,YAAYC,KACtBF,EAAKC,YAAYC,OAIR,cACdC,EADc,OAEdE,EAAoB,IAAIvH,EAAK8B,IAAImE,SACrCrB,EAAUW,mBACV4I,IAJkB,SAME5G,EAAkBrB,QAAQsB,cAAcpB,OAN1C,OAMdqI,EANc,OAOd/G,EAAW+G,EAAO,UAClB9G,EAAW8G,EAAO,UAElB7G,GADA8G,EAAgB/G,EAAWD,GACKL,EAEtCkH,GAAe,SAACI,GAAD,oBAAC,gBACXA,GADU,IAEbD,gBACA9G,qBAfkB,4CAAH,qDAmFbgH,EAAY,uCAAG,8CAAAlN,EAAA,6DACbmN,EAAuB,IAAI7O,EAAK8B,IAAImE,SACxCrB,EAAUU,kBACV4I,IAEI3G,EAAoB,IAAIvH,EAAK8B,IAAImE,SACrCrB,EAAUW,mBACV4I,IAPiB,KAUYhK,EAVZ,SAWXoD,EAAkBrB,QAAQC,UAAUvG,GAASwG,OAXlC,0BAUb0I,EAVa,eAYjB5G,IAAIxD,GAZa,SAaImK,EAAqB3I,QACzC6I,SAAS,EAAGnP,GACZwG,OAfgB,cAab2I,EAba,OAiBbC,EAAqB,IAAI7K,EAAG4K,EAASvC,QAAQtE,IAAIxD,GAjBpC,KAkBMP,EAlBN,UAmBXoD,EAAkBrB,QACrByE,UAAU/K,EAASsO,IACnB9H,OArBc,2BAkBb6I,EAlBa,eAsBjB/G,IAAIxD,GAtBa,KAuBMP,EAvBN,UAwBX0K,EAAqB3I,QAAQgJ,aAAa,EAAGtP,GAASwG,OAxB3C,2BAuBb8I,EAvBa,eAyBjBhH,IAAIxD,GACAsI,EAAY8B,EAAmB/D,GAAGkE,GA1BrB,KA2BO9K,EA3BP,UA4BX0K,EAAqB3I,QAAQiJ,gBAAgB/I,OA5BlC,0CA6BjB8B,IAAIxD,GA7Ba,KA8BSP,EA9BT,UA+BXoD,EAAkBrB,QAAQC,UAAU+H,IAAqB9H,OA/B9C,oBA8BbgJ,EA9Ba,eAgCjBlH,IAAIxD,GACA2K,EAAqBL,EAAmB9G,IAAIkH,GAElDb,GAAe,SAACI,GAAD,oBAAC,gBACXA,GADU,IAEbG,mBAAoBA,EAAmBvG,YAAc,EACrDyG,mBAAoBA,EAAmBzG,YAAc,EACrD2G,aAAcA,EAAa3G,WAC3ByE,YACAqC,mBAAoBA,EAAmB9G,gBAzCtB,4CAAH,qDA6CZgC,EAAQ,uCAAG,sBAAA7I,EAAA,6DACfmE,GAAW,GADI,SAET2I,IAFS,uBAGTI,IAHS,OAIf/I,GAAW,GAJI,2CAAH,qDAuBd,OAhBAtG,IAAMa,WAAU,WAUd,OAPMJ,IACJuK,IAEA+E,YAAYV,EAAc,KAC1BU,YAAYd,EAAe,MAGtB,eAIN,CAAC5O,IAECI,EAEM4F,EACF,cAAC,EAAD,IAGP,cAAC,IAAD,CAAKxC,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACE,cAAC,IAAD,CAAKD,QAAQ,SAAb,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAMqD,QAAM,EAAZ,kBADF,KAC6B4H,KAE7B,eAAC,IAAD,WACE,cAAC,GAAD,CAAM5H,QAAM,EAAZ,oBADF,KAC+B6H,EAAY1G,sBAI/C,cAAC,IAAD,CAAKxE,QAAQ,SAAb,SACE,cAAC,GAAD,CACEV,MAAM,eACNoK,iBAAkBwB,EAAYQ,mBAC9B/B,kBAAmBuB,EAAYU,mBAC/BhC,UAAWsB,EAAYtB,UACvBC,cAAeqB,EAAYY,aAC3BhC,kBAAkB,eAClBC,mBAAmB,eACnB7G,YAAY,mEACZC,MACE,qCACE,qBACEpE,UAAU,mBACVwB,IAAI,kBACJC,IAAI,WAEN,qBAAKzB,UAAU,mBAAmBwB,IAAI,WAAWC,IAAI,cAGzDwJ,QACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,mBACE5J,KAAK,uBACLC,OAAO,SACPC,IAAI,sBAHN,mDAQF,cAAC,IAAD,UACE,mBACEF,KAAK,uBACLC,OAAO,SACPC,IAAI,sBAHN,oCAWR2J,QAlMY,SAACb,GAAD,OAAY,WAKhC,OAJ6B,IAAIxM,EAAK8B,IAAImE,SACxCrB,EAAUU,kBACV4I,IAE0BhI,QACzBmH,QAAQ,EAAG,IAAIlJ,EAAGqI,GAAQ1B,MAAMpG,GAASsD,YACzC+B,KAAK,CACJC,KAAMpK,IAEPmH,MAAK,WACJkD,KAAiBC,QAAjB,0BAAoD,IACpD0E,OAEDzE,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,IACtCkF,SAmLItB,SA/Ka,SAACd,GAAD,OAAY,WAKjC,OAJ6B,IAAIxM,EAAK8B,IAAImE,SACxCrB,EAAUU,kBACV4I,IAE0BhI,QACzBoH,SAAS,EAAG,IAAInJ,EAAGqI,GAAQ1B,MAAMpG,GAASsD,YAC1C+B,KAAK,CACJC,KAAMpK,IAEPmH,MAAK,WACJkD,KAAiBC,QAAjB,yBAAmD,IACnD0E,OAEDzE,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,IACtCkF,SAgKItE,QA5Ja,WAMrB,OAL0B,IAAItK,EAAK8B,IAAImE,SACrCrB,EAAUW,mBACV4I,IAGuBjI,QACtBoE,QACC4D,GACA,kFAEDnE,KAAK,CACJC,KAAMpK,IAEPmH,MAAK,WACJkD,KAAiBC,QAAQ,mCAAoC,IAC7D0E,OAEDzE,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,IACtCkF,iBAyEG,cAAC,EAAD,K,UC7KIlJ,IAASxC,IAAhBD,MAAgBC,IAATwC,MACP6J,GAAYC,KAAZD,QAEF5D,GAAmB,6CACnB8D,GAAiB,6CAEVC,GAAa,WAAO,IAAD,EACJnQ,IAAMiC,WAAWlC,GAAnCU,EADsB,EACtBA,KAAMJ,EADgB,EAChBA,QADgB,EAEFL,IAAMI,SAAS,GAFb,mBAEvB6M,EAFuB,KAEfC,EAFe,OAGMlN,IAAMI,SAAS,IAHrB,mBAGvBgQ,EAHuB,KAGXC,EAHW,OAIArQ,IAAMI,UAAS,GAJf,mBAIvBiG,EAJuB,KAIdC,EAJc,KAMxB+I,EAAY,uCAAG,sCAAAlN,EAAA,6DACbwK,EAAkB,IAAIlM,EAAK8B,IAAImE,SACnCrB,EAAUQ,eACVuG,IAEIkE,EAAiB,IAAI7P,EAAK8B,IAAImE,SAClCrB,EAAUS,cACVoK,IAPiB,KASQtL,EATR,SAUX+H,EAAgBhG,QAAQC,UAAUvG,GAASwG,OAVhC,0BASb0J,EATa,eAWjB5H,IAAIxD,GAXa,KAYOP,EAZP,UAaX0L,EAAe3J,QAAQC,UAAUvG,GAASwG,OAb/B,2BAYb2J,EAZa,eAcjB7H,IAAIxD,GAda,KAeOP,EAfP,UAgBX+H,EAAgBhG,QAAQyE,UAAU/K,EAAS6P,IAAgBrJ,OAhBhD,oBAebwE,EAfa,eAiBjB1C,IAAIxD,GACAsL,EAAaF,EAAe/E,GAAGH,GAErCgF,EAAc,CACZE,eAAgBA,EAAevH,WAC/BwH,cAAeA,EAAcxH,WAC7ByH,eAvBiB,4CAAH,qDA2BZzF,EAAQ,uCAAG,sBAAA7I,EAAA,6DACfmE,GAAW,GADI,SAET+I,IAFS,OAGf/I,GAAW,GAHI,2CAAH,qDAuEd,OANAtG,IAAMa,WAAU,WACVJ,GACFuK,MAED,CAAC3K,IAECI,EAEM4F,EACF,cAAC,EAAD,IAIP,cAAC,IAAD,CAAKxC,QAAQ,SAAb,SACE,cAAC,IAAD,CACEV,MAAM,SACNM,MACE,qBACEb,UAAU,mBACVwB,IAAI,kBACJC,IAAI,WANV,SAUE,eAAC,IAAD,CAAOP,UAAU,WAAjB,UACE,cAAC,GAAD,CAAMoD,QAAM,EAAZ,sDACA,cAAC,GAAD,sHAIA,uBACA,eAAC,KAAD,CACEwJ,iBAAiB,IACjBtD,SAAU,WACRF,EAAU,IAHd,UAME,cAAC8C,GAAD,CAASW,IAAI,UAAb,SACE,cAAC,IAAD,CAAK9M,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACE,cAAC,GAAD,CACEiJ,UAAWqD,EAAWG,eACtBvD,OAAO,QACPC,OAAQA,EACRC,UAAWA,IAEb,cAAC,IAAD,CAAKrJ,QAAQ,MAAb,SACGuM,EAAWK,WACV,cAAC,IAAD,CAAQnM,KAAK,UAAUxB,QApFrB,WAKpB,OAJuB,IAAIrC,EAAK8B,IAAImE,SAClCrB,EAAUS,cACVoK,IAEoBvJ,QACnBiK,MAAM,IAAIhM,EAAGqI,GAAQ1B,MAAMpG,GAASsD,YACpC+B,KAAK,CAAEC,KAAMpK,IACbmH,MAAK,WACJkD,KAAiBC,QAAjB,0BAAoD,IACpD0E,OAEDzE,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,IACtCkF,QAsEc,qBAIA,cAAC,IAAD,CAAQ/K,KAAK,UAAUxB,QA/GpB,WAKrB,OAJwB,IAAIrC,EAAK8B,IAAImE,SACnCrB,EAAUQ,eACVuG,IAEqBzF,QACpBoE,QACCmF,GACA,kFAED1F,KAAK,CACJC,KAAMpK,IAEPmH,MAAK,WACJkD,KAAiBC,QAAQ,4BAA6B,IACtD0E,OAEDzE,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,IACtCkF,QA4Fc,sCAfiB,KAuB3B,cAACW,GAAD,CAASW,IAAI,WAAb,SACE,cAAC,IAAD,CAAK9M,QAAQ,SAAb,SACE,eAAC,IAAD,CAAOC,UAAU,WAAjB,UACE,cAAC,GAAD,CACEiJ,UAAWqD,EAAWI,cACtBxD,OAAO,SACPC,OAAQA,EACRC,UAAWA,IAGb,cAAC,IAAD,CAAKrJ,QAAQ,MAAb,SACE,cAAC,IAAD,CAAQS,KAAK,UAAUxB,QAzFlB,WAKrB,OAJuB,IAAIrC,EAAK8B,IAAImE,SAClCrB,EAAUS,cACVoK,IAEoBvJ,QACnBkK,MAAM,IAAIjM,EAAGqI,GAAQ1B,MAAMpG,GAASsD,YACpC+B,KAAK,CAAEC,KAAMpK,IACbmH,MAAK,WACJkD,KAAiBC,QAAjB,yBAAmD,IACnD0E,OAEDzE,OAAM,SAACC,GACNH,KAAiBG,MAAMA,EAAMV,QAAS,IACtCkF,QA2EY,8BAXoB,eArD7B,cAAC,EAAD,KC/EIyB,OAnCf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBC3BCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1J,MAAK,YAAkD,IAA/C2J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.56843054.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Web3Context = React.createContext({});\n\nexport const Web3Store = ({ children }) => {\n  const [account, setAccount] = React.useState(null);\n  const [networkId, setNetworkId] = React.useState(null);\n  const [web3, setWeb3] = React.useState(null);\n  const [initialized, setInitialized] = React.useState(false);\n\n  React.useEffect(() => {\n    if (initialized) {\n      window.ethereum.on(\"accountsChanged\", function (accounts) {\n        // Time to reload your interface with accounts[0]!\n        const address = accounts[0];\n        setAccount(address);\n      });\n\n      window.ethereum.on(\"networkChanged\", function (networkId) {\n        // Time to reload your interface with the new networkId\n        setNetworkId(Number(networkId));\n      });\n    }\n  }, [initialized]);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        account,\n        setAccount,\n        networkId,\n        setNetworkId,\n        web3,\n        setWeb3,\n        initialized,\n        setInitialized,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","import React from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport { Button, Card } from \"antd\";\nimport { Web3Context } from \"../../store/Web3Store\";\nimport \"./ConnectWallet.css\";\n\nconst providerOptions = {\n  /* See Provider Options Section */\n  injected: {\n    options: {\n      rpc: {\n        56: \"https://bsc-dataseed.binance.org/\",\n      },\n      network: \"binance\",\n      chainId: 56,\n    },\n  },\n};\n\nconst web3Modal = new Web3Modal({\n  network: \"biannce\", // optional\n  cacheProvider: true, // optional\n  providerOptions, // required\n});\n\nexport const ConnectWalletButton = () => {\n  const {\n    account,\n    networkId,\n    setAccount,\n    setNetworkId,\n    setWeb3,\n    setInitialized,\n  } = React.useContext(Web3Context);\n\n  const connectWallet = async () => {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    const address = accounts[0];\n    const networkId = await web3.eth.net.getId();\n    setWeb3(web3);\n    setAccount(address);\n    setNetworkId(networkId);\n    setInitialized(true);\n  };\n\n  if (networkId !== null && networkId !== 56) {\n    // Not BSC\n    return <Button danger>Wrong Network</Button>;\n  } else if (account) {\n    return (\n      <button className=\"connect-wallet ant-btn\" disabled>\n        <span>{account}</span>\n      </button>\n    );\n  }\n  return <Button onClick={connectWallet}>Connect Wallet</Button>;\n};\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeaderMenu = (\n  <Menu>\n    <Menu.Item key=\"0\">\n      <Link to=\"/\">Home</Link>\n    </Menu.Item>\n    <Menu.Item key=\"1\">\n      <Link to=\"/analytics\">Analytics</Link>\n    </Menu.Item>\n    <Menu.Item key=\"2\">\n      <Link to=\"/ngmi-nft\">NGMI NFT</Link>\n    </Menu.Item>\n    <Menu.Item key=\"3\">\n      <Link to=\"/why-wagmi\">Why $WAGMI?</Link>\n    </Menu.Item>\n  </Menu>\n);\n","import React from \"react\";\nimport { Col, Dropdown, PageHeader, Row, Space } from \"antd\";\nimport { ConnectWalletButton } from \"../ConnectWallet/ConnectWallet\";\nimport { Link } from \"react-router-dom\";\nimport { HeaderMenu } from \"./Menu\";\n\nexport const MainHeader = () => {\n  return (\n    <PageHeader\n      className=\"site-page-header\"\n      title={\n        <>\n          <Dropdown overlay={HeaderMenu} trigger={[\"click\"]} arrow>\n            <i className=\"bi bi-list\"></i>\n          </Dropdown>\n          <Link style={{ color: \"black\" }} to=\"/\">\n            WAGMI\n          </Link>\n        </>\n      }\n      extra={[<ConnectWalletButton />]}\n    />\n  );\n};\n","import React from \"react\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { grey } from \"@ant-design/colors\";\n\nconst { Title } = Typography;\n\nexport const IndexPage = () => {\n  return (\n    <Row justify=\"center\">\n      <Space direction=\"vertical\">\n        <Space direction=\"vertical\" size=\"large\">\n          <Row>\n            <Col span={12}>\n              <a\n                href=\"https://bscscan.com/token/0xcddb9f34d6a48e5d051561e6d9fbfc96050cd429\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"image-zoom cover\" src=\"wagmi.png\" alt=\"WAGMI\" />\n              </a>\n            </Col>\n            <Col span={12}>\n              <a\n                href=\"https://bscscan.com/token/0xbe218b17bbf76e8d957e83265087115e2056c5a7\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img className=\"image-zoom cover\" src=\"ngmi.png\" alt=\"NGMI\" />\n              </a>\n            </Col>\n          </Row>\n        </Space>\n        <Row type=\"flex\" justify=\"center\">\n          <Col>\n            <Title level={2}>Here's what happens to WAGMI over time</Title>\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col>\n            <img src=\"chart.jpg\" alt=\"chart\" className=\"cover\" />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"space-around\">\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://github.com/WagmiT\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-github\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://twitter.com/wagmit\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-twitter\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://t.me/wagmi_together\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-telegram\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://telegram.me/collablandbot?start=VFBDI1RFTCNDT01NIy0xMDAxNDM3ODA3Njgx\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: grey.primary }}\n              >\n                <i className=\"bi bi-telegram\"></i>\n              </a>\n            </Title>\n          </Col>\n        </Row>\n      </Space>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Row, Space, Typography } from \"antd\";\nimport { ConnectWalletButton } from \"./ConnectWallet\";\n\nconst { Title } = Typography;\n\nexport const ConnectWalletInstruction = () => {\n  return (\n    <Row justify=\"center\">\n      <Space size=\"large\" direction=\"vertical\">\n        <Title level={2}>Please connect your wallet to continue</Title>\n        <ConnectWalletButton />\n      </Space>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Row, Spin } from \"antd\";\n\nexport const Loading = () => {\n  return (\n    <Row justify=\"center\">\n      <Spin size=\"large\" />\n    </Row>\n  );\n};\n","import BigNumber from \"bignumber.js\";\n\nexport const BN = BigNumber;\nBigNumber.config({ DECIMAL_PLACES: 9 });\nexport const numberFormat = new Intl.NumberFormat(\"en-GB\");\nexport const divisor = new BN(10).pow(new BN(18));\n\nexport const contracts = {\n  // WAGMI\n  WAGMI_CONTRACT_ADDRESS: \"0xcddb9f34d6a48e5d051561e6d9fbfc96050cd429\",\n  wagmiAbiJson: require(\"./abi/wagmi.json\"),\n  // Why WAGMI\n  WHY_WAGMI_CONTRACT_ADDRESS: \"0xE1C1F67B6FA75cBaf3a170A0470Fa40EfDbe05e6\",\n  whyWagmiAbiJson: require(\"./abi/why_wagmi.json\"),\n  // NGMI NFT\n  NGMI_NFT_CONTRACT_ADDRESS: \"0x854Bd71322Cd05e30E88e04549F91a728F49dEC7\",\n  ngmiAbiJson: require(\"./abi/ngmi_nft.json\"),\n  // WAGMI_V2\n  wagmiV2AbiJson: require(\"./abi/wagmi_v2.json\"),\n  // xWAGMI\n  xWagmiAbiJson: require(\"./abi/xwagmi.json\"),\n  // MasterChef\n  masterChefAbiJson: require(\"./abi/masterchef.json\"),\n  // PancakeV2LP\n  pancakeV2LpAbiJson: require(\"./abi/pancakeV2LP.json\"),\n  WAGMI_V1_BNB_PANCAKE_V2_LP_ADDRESS:\n    \"0x2da0cfb1396447bc12eFE609901E23E9c3f1B97b\",\n};\n","import React from \"react\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport Web3 from \"web3\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { contracts } from \"../constants\";\n\nconst BN = Web3.utils.BN;\n\nconst { Title, Text } = Typography;\n\nexport const NgmiNftPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [ngmiNft, setNgmiNft] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!!web3 && !!account) {\n      setLoading(true);\n      (async () => {\n        const ngmiContract = new web3.eth.Contract(\n          contracts.ngmiAbiJson,\n          contracts.NGMI_NFT_CONTRACT_ADDRESS\n        );\n        const balanceOf = await ngmiContract.methods.balanceOf(account).call();\n        if (balanceOf !== \"0\") {\n          setNgmiNft({\n            name: \"NGMI NFT\",\n            description: \"You're not gonna make it since u sold WAGMI\",\n            image: \"https://wagmit.github.io/dicpic.jpg\",\n          });\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n\n  if (ngmiNft) {\n    return (\n      <Row justify=\"center\">\n        <Card title=\"Shame on you\">\n          <img\n            style={{ maxWidth: \"300px\" }}\n            className=\"cover\"\n            src={ngmiNft.image}\n            alt={ngmiNft.description}\n          />\n          <br />\n          <Text strong>{ngmiNft.name}</Text>\n          <br />\n          <Text>{ngmiNft.description}</Text>\n        </Card>\n      </Row>\n    );\n  }\n  return (\n    <Row justify=\"center\">\n      <Col>\n        <Title level={2}>You don't own any NGMI NFT</Title>\n        <Text>WAGMI!</Text>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport Web3 from \"web3\";\nimport { Pie } from \"react-chartjs-2\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { BN, contracts } from \"../constants\";\n\nconst { Title } = Typography;\n\nconst numberFormat = new Intl.NumberFormat(\"en-GB\");\n\nexport const AnalyticsPage = () => {\n  const { web3 } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [analytics, setAnalytics] = React.useState(null);\n  const [bnbPrice, setBnbPrice] = React.useState(null);\n\n  const getBnbPrice = () => {\n    return fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setBnbPrice(data.binancecoin.usd);\n        return data.binancecoin.usd;\n      });\n  };\n\n  React.useEffect(() => {\n    if (!!web3 && loading) {\n      (async () => {\n        const cgBnbPrice = await getBnbPrice();\n        const wagmiContract = new web3.eth.Contract(\n          contracts.wagmiAbiJson,\n          contracts.WAGMI_CONTRACT_ADDRESS\n        );\n        const pancakeLpContract = new web3.eth.Contract(\n          contracts.pancakeV2LpAbiJson,\n          contracts.WAGMI_V1_BNB_PANCAKE_V2_LP_ADDRESS\n        );\n        const wagmiReserve = await pancakeLpContract.methods\n          .getReserves()\n          .call();\n        const reserve0 = wagmiReserve[\"_reserve0\"];\n        const reserve1 = wagmiReserve[\"_reserve1\"];\n        const wagmiBnbPrice = reserve0 / reserve1;\n        const wagmiUsdPrice = wagmiBnbPrice * cgBnbPrice;\n        console.log(wagmiUsdPrice);\n        const divisor = new BN(10).pow(new BN(18));\n        const circulatingSupply = new BN(\n          (await wagmiContract.methods.totalSupply().call()).toString()\n        ).div(divisor);\n        const maxSupply = new BN(10 ** 9);\n        const whyWagmiBurnt = new BN(\n          await wagmiContract.methods\n            .balanceOf(\"0x0000000000000000000000000000000000000001\")\n            .call()\n        ).div(divisor);\n        const totalBurnt = maxSupply.sub(circulatingSupply).sub(whyWagmiBurnt);\n        setAnalytics({\n          circulatingSupply: circulatingSupply.toNumber(),\n          totalBurnt: totalBurnt.toNumber(),\n          maxSupply: maxSupply.toNumber(),\n          whyWagmiBurnt: whyWagmiBurnt.toNumber(),\n          wagmiUsdPrice: wagmiUsdPrice,\n        });\n        setLoading(false);\n      })();\n    }\n  }, [web3]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <Space size=\"large\" direction=\"vertical\" style={{ width: \"100%\" }}>\n        <Row justify=\"center\">\n          <Title level={1}>Were All Gonna Make It ($WAGMI)</Title>\n        </Row>\n        <Row justify=\"center\">\n          <Col>\n            <Pie\n              data={{\n                labels: [\n                  \"Circulating Supply\",\n                  \"Burnt $WAGMI\",\n                  \"Why $WAGMI burnt\",\n                ],\n                datasets: [\n                  {\n                    label: \"WAGMI\",\n                    backgroundColor: [\n                      \"rgba(54, 162, 235, 0.2)\",\n                      \"rgba(255, 99, 132, 0.2)\",\n                      \"rgba(255, 99, 132, 0.2)\",\n                    ],\n                    borderColor: [\n                      \"rgba(54, 162, 235, 1)\",\n                      \"rgba(255, 99, 132, 1)\",\n                      \"rgba(255, 99, 132, 1)\",\n                    ],\n                    data: [\n                      analytics.circulatingSupply,\n                      analytics.totalBurnt,\n                      analytics.whyWagmiBurnt,\n                    ],\n                  },\n                ],\n              }}\n            />\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col span={8}>\n            <Card title=\"$WAGMI Price\">${analytics.wagmiUsdPrice}</Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Market Cap\">\n              $\n              {numberFormat.format(\n                analytics.wagmiUsdPrice * analytics.circulatingSupply\n              )}\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Max Supply\">\n              {numberFormat.format(analytics.maxSupply)} $WAGMI\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Circulating Supply\">\n              {numberFormat.format(analytics.circulatingSupply)} $WAGMI\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Total Burnt\">\n              {numberFormat.format(analytics.totalBurnt)} $WAGMI\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card title=\"Total Why $WAGMI Burnt\">\n              {numberFormat.format(analytics.whyWagmiBurnt)} $WAGMI\n            </Card>\n          </Col>\n        </Row>\n      </Space>\n      <Space\n        size=\"large\"\n        direction=\"vertical\"\n        style={{ width: \"100%\" }}\n      ></Space>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { contracts } from \"../constants\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport {\n  Col,\n  Row,\n  Typography,\n  Comment,\n  List,\n  Input,\n  Space,\n  Button,\n  message as AntDesignMessage,\n} from \"antd\";\nimport Web3 from \"web3\";\n\nconst BN = Web3.utils.BN;\n\nconst { Title, Text } = Typography;\n\nexport const WhyWAGMIPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [whyWagmiData, setWhyWagmiData] = React.useState(null);\n  const [whyWagmiMessages, setWhyWagmiMessages] = React.useState([]);\n\n  const getWhyWagmi = async () => {\n    setWhyWagmiMessages((v) => []);\n    const whyWAGMIContract = new web3.eth.Contract(\n      contracts.whyWagmiAbiJson,\n      contracts.WHY_WAGMI_CONTRACT_ADDRESS\n    );\n    const messagesCount = await whyWAGMIContract.methods.messagesCount().call();\n    setWhyWagmiData((v) => ({ ...v, messagesCount }));\n    for (let i = Number(messagesCount) - 1; i >= 0; i--) {\n      const message = await whyWAGMIContract.methods.messages(i).call();\n      setWhyWagmiMessages((v) => [...v, message]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const message = e.target.message.value;\n    const whyWAGMIContract = new web3.eth.Contract(\n      contracts.whyWagmiAbiJson,\n      contracts.WHY_WAGMI_CONTRACT_ADDRESS\n    );\n    whyWAGMIContract.methods\n      .sendMessage(message)\n      .send({ from: account })\n      .then(() => {\n        AntDesignMessage.success(\"Message send!\", 10);\n        getWhyWagmi();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n      });\n  };\n\n  const handleApproval = async () => {\n    const WAGMIContract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      contracts.WAGMI_CONTRACT_ADDRESS\n    );\n    WAGMIContract.methods\n      .approve(\n        contracts.WHY_WAGMI_CONTRACT_ADDRESS,\n        \"115792089237316195423570985008687907853269984665640564020457584007913129639935\"\n      )\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(\"$WAGMI Contract Approved!\", 10);\n        mainFunc();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n      });\n  };\n\n  const mainFunc = async () => {\n    const whyWAGMIContract = new web3.eth.Contract(\n      contracts.whyWagmiAbiJson,\n      contracts.WHY_WAGMI_CONTRACT_ADDRESS\n    );\n    const WAGMIContract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      contracts.WAGMI_CONTRACT_ADDRESS\n    );\n    const fee = (await whyWAGMIContract.methods.feeCost().call()) * 10;\n    const approvalLimit = await WAGMIContract.methods\n      .allowance(account, contracts.WHY_WAGMI_CONTRACT_ADDRESS)\n      .call();\n    setWhyWagmiData({\n      fee,\n      hasApproved: new BN(fee)\n        .times(new BN(10).pow(new BN(18)))\n        .lt(new BN(approvalLimit)),\n    });\n    setLoading(false);\n    await getWhyWagmi();\n  };\n\n  React.useEffect(() => {\n    if (!!web3 && !!account) {\n      mainFunc();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Row justify=\"center\">\n      <Space direction=\"vertical\">\n        <Row justify=\"center\">\n          <Col>\n            <Title level={2}>Why $WAGMI?</Title>\n          </Col>\n        </Row>\n        <Row>\n          <Text>{whyWagmiData.fee} $WAGMI is needed for sending a message</Text>\n        </Row>\n        <Row justify=\"center\">\n          {whyWagmiData.hasApproved ? (\n            <form onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <Input name=\"message\" placeholder=\"Enter messages\" />\n                </Col>\n                <Col>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                </Col>\n              </Row>\n            </form>\n          ) : (\n            <Button onClick={handleApproval}>Approve $WAGMI</Button>\n          )}\n        </Row>\n        <Row justify=\"center\">\n          <Col>\n            <List\n              header={`${whyWagmiData.messagesCount || \"-\"} replies`}\n              itemLayout=\"horizontal\"\n              dataSource={whyWagmiMessages}\n              renderItem={(item) => (\n                <li>\n                  <Comment author={item.author} content={item.message} />\n                </li>\n              )}\n            />\n          </Col>\n        </Row>\n      </Space>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { BN, contracts, divisor, numberFormat } from \"../constants\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport {\n  Button,\n  Card,\n  Col,\n  message as AntDesignMessage,\n  Row,\n  Space,\n  Typography,\n} from \"antd\";\n\nconst { Title, Text } = Typography;\n\n// Ropsten\nconst WAGMI_V1_ADDRESS = \"0x8aD45681c53e7c6BdbB1E6113CE104d192F6F654\";\nconst WAGMI_V2_ADDRESS = \"0xad941e29887f6b0B4f58d6B5fbC3A3AeCA9d684F\";\n\nexport const BridgePage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [bridgeData, setBridgeData] = React.useState(null);\n\n  const handleApproval = async () => {\n    const wagmiV1Contract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      WAGMI_V1_ADDRESS\n    );\n    return wagmiV1Contract.methods\n      .approve(\n        WAGMI_V2_ADDRESS,\n        \"115792089237316195423570985008687907853269984665640564020457584007913129639935\"\n      )\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(\"$WAGMI Contract Approved!\", 10);\n        mainFunc();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n      });\n  };\n\n  const bridge = async () => {\n    const wagmiV2Contract = new web3.eth.Contract(\n      contracts.wagmiV2AbiJson,\n      WAGMI_V2_ADDRESS\n    );\n    wagmiV2Contract.methods\n      .migrateFromV1toV2()\n      .send({ from: account })\n      .then(() => {\n        AntDesignMessage.success(\"Successfully bridge to V2\", 10);\n        mainFunc();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n      });\n  };\n\n  const mainFunc = async () => {\n    const wagmiV1Contract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      WAGMI_V1_ADDRESS\n    );\n    const wagmiV2Contract = new web3.eth.Contract(\n      contracts.wagmiAbiJson,\n      WAGMI_V2_ADDRESS\n    );\n\n    const balanceOfV1 = new BN(\n      await wagmiV1Contract.methods.balanceOf(account).call()\n    ).div(divisor);\n    const balanceOfV2 = new BN(\n      await wagmiV2Contract.methods.balanceOf(account).call()\n    ).div(divisor);\n    const approvalLimit = new BN(\n      await wagmiV1Contract.methods.allowance(account, WAGMI_V2_ADDRESS).call()\n    ).div(divisor);\n    setBridgeData({\n      balanceOfV1: balanceOfV1.toNumber(),\n      balanceOfV2: balanceOfV2.toNumber(),\n      hasApproved: balanceOfV1.lt(approvalLimit),\n    });\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    if (!!web3 && !!account) {\n      mainFunc();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n  return (\n    <Row justify=\"center\">\n      <Col>\n        <Row>\n          <Title level={2}>Bridge from WAGMI V1 to WAGMI V2</Title>\n        </Row>\n        <Row>\n          <Text>Note: This is a one-way bridge from V1 to V2</Text>\n        </Row>\n        <br />\n        <br />\n        <Card>\n          <Row justify=\"center\">\n            <Space direction=\"vertical\" size=\"middle\">\n              <Row>\n                <Text strong>WAGMI V1 Balance: &nbsp;</Text>\n                {numberFormat.format(bridgeData.balanceOfV1)} WAGMI\n              </Row>\n              <Row>\n                <Text strong>WAGMI V2 Balance: &nbsp;</Text>\n                {numberFormat.format(bridgeData.balanceOfV2)} WAGMI V2\n              </Row>\n              <Row justify=\"center\">\n                {!bridgeData.hasApproved ? (\n                  <Button type=\"primary\" onClick={handleApproval}>\n                    Approve\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" onClick={bridge}>\n                    Bridge {bridgeData.balanceOfV1} $WAGMI\n                  </Button>\n                )}\n              </Row>\n            </Space>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Space, Row, Typography, Input, Button } from \"antd\";\n\nconst { Text } = Typography;\n\nexport const DepositWithdrawInput = ({\n  maxAmount,\n  symbol,\n  amount,\n  setAmount,\n}) => {\n  const handleInputChange = (e) => {\n    setAmount(Number(e.target.value));\n  };\n  return (\n    <Space direction=\"vertical\">\n      <Row justify=\"end\">\n        <Text>\n          {maxAmount} {symbol} Available\n        </Text>\n      </Row>\n      <Input\n        value={amount}\n        onChange={handleInputChange}\n        suffix={\n          <div>\n            <Text strong>{symbol} </Text> &nbsp;\n            <Button\n              onClick={() => {\n                handleInputChange({ target: { value: maxAmount } });\n              }}\n            >\n              Max\n            </Button>\n          </div>\n        }\n      />\n    </Space>\n  );\n};\n","import React from \"react\";\nimport { Button, Card, Col, Row, Modal, Typography, Input } from \"antd\";\nimport { DepositWithdrawInput } from \"./DepositWithdrawInput\";\n\nconst { Text } = Typography;\n\nexport const FarmCard = ({\n  title,\n  maxDepositAmount,\n  maxWithdrawAmount,\n  isApprove,\n  pendingReward,\n  depositCoinSymbol,\n  withdrawCoinSymbol,\n  description,\n  image,\n  details,\n  deposit,\n  withdraw,\n  approve,\n  harvest,\n}) => {\n  const [showDetails, setShowDetails] = React.useState(false);\n  const [modalVisible, setModalVisible] = React.useState(false);\n  const [modal, setModal] = React.useState({ title: \"\", onOk: () => {} });\n  const [amount, setAmount] = React.useState(0);\n\n  const onCancel = () => {\n    setModalVisible(false);\n  };\n\n  const handleDeposit = () => {\n    setAmount(0);\n    setModal({\n      title: `Deposit ${title} Tokens`,\n      onOk: deposit,\n      onCancel,\n      symbol: depositCoinSymbol,\n      maxAmount: maxDepositAmount,\n    });\n    setModalVisible(true);\n  };\n\n  const handleWithdraw = () => {\n    setAmount(0);\n    setModal({\n      title: `Withdraw ${title} Tokens`,\n      onOk: withdraw,\n      onCancel,\n      symbol: withdrawCoinSymbol,\n      maxAmount: maxWithdrawAmount,\n    });\n    setModalVisible(true);\n  };\n\n  return (\n    <>\n      <Modal\n        {...{\n          visible: modalVisible,\n          ...modal,\n          onOk: modal.onOk(amount),\n        }}\n      >\n        <DepositWithdrawInput\n          maxAmount={modal.maxAmount}\n          symbol={modal.symbol}\n          amount={amount}\n          setAmount={setAmount}\n        />\n      </Modal>\n      <Card title={title} extra={image}>\n        <Text>{description}</Text>\n        <br />\n        <br />\n        {isApprove ? (\n          <>\n            <Row>\n              {pendingReward && (\n                <>\n                  <Col span={16}>\n                    <Text strong>$WAGMI earned:</Text>\n                    <br />\n                    <Text>{pendingReward}</Text>\n                  </Col>\n                </>\n              )}\n            </Row>\n            <Row>\n              <Col span={16}>\n                <Text strong>{title} staked:</Text>\n                <br />\n                <Text>{maxWithdrawAmount}</Text>\n              </Col>\n              <Col span={8}>\n                <Row justify=\"space-around\">\n                  {maxWithdrawAmount ? (\n                    <>\n                      <Button onClick={handleWithdraw} type=\"default\">\n                        -\n                      </Button>\n                      <Button onClick={handleDeposit} type=\"default\">\n                        +\n                      </Button>\n                    </>\n                  ) : (\n                    <Button onClick={handleDeposit}>Stake</Button>\n                  )}\n                </Row>\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <Row justify=\"center\">\n            <Button type=\"primary\" onClick={approve}>\n              Approve Contract\n            </Button>\n          </Row>\n        )}\n        <hr />\n        {showDetails ? (\n          <>\n            <Row\n              justify=\"center\"\n              className=\"cursor\"\n              onClick={() => setShowDetails(false)}\n            >\n              <Text>\n                Hide <i className=\"bi bi-caret-up-fill\"></i>\n              </Text>\n            </Row>\n            <Row>{details}</Row>\n          </>\n        ) : (\n          <Row\n            justify=\"center\"\n            className=\"cursor\"\n            onClick={() => setShowDetails(true)}\n          >\n            <Text>\n              Details <i className=\"bi bi-caret-down-fill\"></i>\n            </Text>\n          </Row>\n        )}\n      </Card>\n    </>\n  );\n};\n","import {\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n  message as AntDesignMessage,\n} from \"antd\";\nimport React from \"react\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { FarmCard } from \"../component/Farm/Farm\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { contracts, divisor, BN } from \"../constants\";\nimport { Web3Context } from \"../store/Web3Store\";\n\nconst MASTER_CHEF_ADDRESS = \"0x390Dc58E5fa9D5Be0430c28acd2d8aA68D9435ea\";\nconst PANCAKE_LP_ADDRESS = \"0xb1196a805611fcc3cde3dd7b1442c7f31dadd03c\";\n\nconst { Text } = Typography;\n\nexport const StakingPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [bnbPrice, setBnbPrice] = React.useState(null);\n  const [stakingData, setStakingData] = React.useState({});\n\n  const getBnbPrice = () => {\n    return fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setBnbPrice(data.binancecoin.usd);\n        return data.binancecoin.usd;\n      });\n  };\n\n  const getWagmiPrice = async () => {\n    const cgBnbPrice = await getBnbPrice();\n    const pancakeLpContract = new web3.eth.Contract(\n      contracts.pancakeV2LpAbiJson,\n      PANCAKE_LP_ADDRESS\n    );\n    const reserve = await pancakeLpContract.methods.getReserves().call();\n    const reserve0 = reserve[\"_reserve0\"];\n    const reserve1 = reserve[\"_reserve1\"];\n    const wagmiBnbPrice = reserve1 / reserve0;\n    const wagmiUsdPrice = wagmiBnbPrice * cgBnbPrice;\n\n    setStakingData((d) => ({\n      ...d,\n      wagmiBnbPrice,\n      wagmiUsdPrice,\n    }));\n  };\n\n  const handleDeposit = (amount) => () => {\n    const masterChefLpContract = new web3.eth.Contract(\n      contracts.masterChefAbiJson,\n      MASTER_CHEF_ADDRESS\n    );\n    return masterChefLpContract.methods\n      .deposit(0, new BN(amount).times(divisor).toString())\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(`Successfully deposited!`, 10);\n        handleReload();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n        handleReload();\n      });\n  };\n\n  const handleWithdraw = (amount) => () => {\n    const masterChefLpContract = new web3.eth.Contract(\n      contracts.masterChefAbiJson,\n      MASTER_CHEF_ADDRESS\n    );\n    return masterChefLpContract.methods\n      .withdraw(0, new BN(amount).times(divisor).toString())\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(`Successfully withdrew!`, 10);\n        handleReload();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n        handleReload();\n      });\n  };\n\n  const handleApproval = () => {\n    const pancakeLpContract = new web3.eth.Contract(\n      contracts.pancakeV2LpAbiJson,\n      PANCAKE_LP_ADDRESS\n    );\n\n    return pancakeLpContract.methods\n      .approve(\n        MASTER_CHEF_ADDRESS,\n        \"115792089237316195423570985008687907853269984665640564020457584007913129639935\"\n      )\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(\"$WAGMI-BNB LP Contract Approved!\", 10);\n        handleReload();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n        handleReload();\n      });\n  };\n\n  const handleReload = async () => {\n    const masterChefLpContract = new web3.eth.Contract(\n      contracts.masterChefAbiJson,\n      MASTER_CHEF_ADDRESS\n    );\n    const pancakeLpContract = new web3.eth.Contract(\n      contracts.pancakeV2LpAbiJson,\n      PANCAKE_LP_ADDRESS\n    );\n\n    const wagmiV2BnbLpAmount = new BN(\n      await pancakeLpContract.methods.balanceOf(account).call()\n    ).div(divisor);\n    const userInfo = await masterChefLpContract.methods\n      .userInfo(0, account)\n      .call();\n\n    const masterChefLpAmount = new BN(userInfo.amount).div(divisor);\n    const approveLimit = new BN(\n      await pancakeLpContract.methods\n        .allowance(account, MASTER_CHEF_ADDRESS)\n        .call()\n    ).div(divisor);\n    const pendingWagmi = new BN(\n      await masterChefLpContract.methods.pendingWagmi(0, account).call()\n    ).div(divisor);\n    const isApprove = wagmiV2BnbLpAmount.lt(approveLimit);\n    const wagmiPerBlock = new BN(\n      await masterChefLpContract.methods.wagmiPerBlock().call()\n    ).div(divisor);\n    const totalStakedOfLp = new BN(\n      await pancakeLpContract.methods.balanceOf(MASTER_CHEF_ADDRESS).call()\n    ).div(divisor);\n    const percentOfPoolOwned = masterChefLpAmount.div(totalStakedOfLp);\n\n    setStakingData((d) => ({\n      ...d,\n      wagmiV2BnbLpAmount: wagmiV2BnbLpAmount.toNumber() || 0,\n      masterChefLpAmount: masterChefLpAmount.toNumber() || 0,\n      pendingWagmi: pendingWagmi.toNumber(),\n      isApprove,\n      percentOfPoolOwned: percentOfPoolOwned.toNumber(),\n    }));\n  };\n\n  const mainFunc = async () => {\n    setLoading(true);\n    await getWagmiPrice();\n    await handleReload();\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    let interval1, interval2;\n\n    if (!!web3) {\n      mainFunc();\n\n      setInterval(handleReload, 10000);\n      setInterval(getWagmiPrice, 30000);\n    }\n\n    return () => {\n      interval1 && clearInterval(interval1);\n      interval2 && clearInterval(interval2);\n    };\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n  return (\n    <Row justify=\"center\">\n      <Space direction=\"vertical\">\n        <Row justify=\"center\">\n          <Space>\n            <Card>\n              <Text strong>$BNB</Text> ${bnbPrice}\n            </Card>\n            <Card>\n              <Text strong>$WAGMI</Text> ${stakingData.wagmiUsdPrice}\n            </Card>\n          </Space>\n        </Row>\n        <Row justify=\"center\">\n          <FarmCard\n            title=\"WAGMI-BNB LP\"\n            maxDepositAmount={stakingData.wagmiV2BnbLpAmount}\n            maxWithdrawAmount={stakingData.masterChefLpAmount}\n            isApprove={stakingData.isApprove}\n            pendingReward={stakingData.pendingWagmi}\n            depositCoinSymbol=\"WAGMI-BNB LP\"\n            withdrawCoinSymbol=\"WAGMI-BNB LP\"\n            description=\"stake WAGMI-BNB Pancake V2 LP and earn $WAGMI (0.5% deposit fee)\"\n            image={\n              <>\n                <img\n                  className=\"cover coin-image\"\n                  src=\"/wagmi-logo.png\"\n                  alt=\"xWagmi\"\n                />\n                <img className=\"cover coin-image\" src=\"/bnb.png\" alt=\"xWagmi\" />\n              </>\n            }\n            details={\n              <Row>\n                <Col>\n                  <Row>\n                    <a\n                      href=\"https://bscscan.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Provide Liquidity on PancakeSwap V2\n                    </a>\n                  </Row>\n                  <Row>\n                    <a\n                      href=\"https://bscscan.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      View on BSCScan\n                    </a>\n                  </Row>\n                </Col>\n              </Row>\n            }\n            deposit={handleDeposit}\n            withdraw={handleWithdraw}\n            approve={handleApproval}\n          />\n        </Row>\n      </Space>\n    </Row>\n  );\n};\n","import {\n  Button,\n  Card,\n  Row,\n  Space,\n  Tabs,\n  Typography,\n  message as AntDesignMessage,\n} from \"antd\";\nimport React from \"react\";\nimport { ConnectWalletInstruction } from \"../component/ConnectWallet/ConnectWalletInstruction\";\nimport { DepositWithdrawInput } from \"../component/Farm/DepositWithdrawInput\";\nimport { Loading } from \"../component/Loading/Loading\";\nimport { BN, contracts, divisor } from \"../constants\";\nimport { Web3Context } from \"../store/Web3Store\";\n\nconst { Title, Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst WAGMI_V2_ADDRESS = \"0xad941e29887f6b0B4f58d6B5fbC3A3AeCA9d684F\";\nconst XWAGMI_ADDRESS = \"0x8d7B20a5Ec6B241b5Cfd61F9d2307c43e424759b\";\n\nexport const XWagmiPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [amount, setAmount] = React.useState(0);\n  const [xWagmiData, setXWagmiData] = React.useState({});\n  const [loading, setLoading] = React.useState(false);\n\n  const handleReload = async () => {\n    const wagmiV2Contract = new web3.eth.Contract(\n      contracts.wagmiV2AbiJson,\n      WAGMI_V2_ADDRESS\n    );\n    const xWagmiContract = new web3.eth.Contract(\n      contracts.xWagmiAbiJson,\n      XWAGMI_ADDRESS\n    );\n    const wagmiV2Balance = new BN(\n      await wagmiV2Contract.methods.balanceOf(account).call()\n    ).div(divisor);\n    const xWagmiBalance = new BN(\n      await xWagmiContract.methods.balanceOf(account).call()\n    ).div(divisor);\n    const approvalLimit = new BN(\n      await wagmiV2Contract.methods.allowance(account, XWAGMI_ADDRESS).call()\n    ).div(divisor);\n    const isApproved = wagmiV2Balance.lt(approvalLimit);\n\n    setXWagmiData({\n      wagmiV2Balance: wagmiV2Balance.toNumber(),\n      xWagmiBalance: xWagmiBalance.toNumber(),\n      isApproved,\n    });\n  };\n\n  const mainFunc = async () => {\n    setLoading(true);\n    await handleReload();\n    setLoading(false);\n  };\n\n  const handleApproval = () => {\n    const wagmiV2Contract = new web3.eth.Contract(\n      contracts.wagmiV2AbiJson,\n      WAGMI_V2_ADDRESS\n    );\n    return wagmiV2Contract.methods\n      .approve(\n        XWAGMI_ADDRESS,\n        \"115792089237316195423570985008687907853269984665640564020457584007913129639935\"\n      )\n      .send({\n        from: account,\n      })\n      .then(() => {\n        AntDesignMessage.success(\"xWAGMI Contract Approved!\", 10);\n        handleReload();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n        handleReload();\n      });\n  };\n\n  const handleDeposit = () => {\n    const xWagmiContract = new web3.eth.Contract(\n      contracts.xWagmiAbiJson,\n      XWAGMI_ADDRESS\n    );\n    return xWagmiContract.methods\n      .enter(new BN(amount).times(divisor).toString())\n      .send({ from: account })\n      .then(() => {\n        AntDesignMessage.success(`Successfully deposited!`, 10);\n        handleReload();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n        handleReload();\n      });\n  };\n\n  const handleWithdraw = () => {\n    const xWagmiContract = new web3.eth.Contract(\n      contracts.xWagmiAbiJson,\n      XWAGMI_ADDRESS\n    );\n    return xWagmiContract.methods\n      .leave(new BN(amount).times(divisor).toString())\n      .send({ from: account })\n      .then(() => {\n        AntDesignMessage.success(`Successfully Withdrew!`, 10);\n        handleReload();\n      })\n      .catch((error) => {\n        AntDesignMessage.error(error.message, 10);\n        handleReload();\n      });\n  };\n\n  React.useEffect(() => {\n    if (web3) {\n      mainFunc();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return <ConnectWalletInstruction />;\n  } else if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Row justify=\"center\">\n      <Card\n        title=\"xWAGMI\"\n        extra={\n          <img\n            className=\"cover coin-image\"\n            src=\"/wagmi-logo.png\"\n            alt=\"xWagmi\"\n          />\n        }\n      >\n        <Space direction=\"vertical\">\n          <Text strong>Single Assets Staking, for WAGMI HODLERs</Text>\n          <Text>\n            stake $WAGMI and earn 3% of the transaction fee of $WAGMI (5%\n            transaction fee being charged for $WAGMI)\n          </Text>\n          <br />\n          <Tabs\n            defaultActiveKey=\"1\"\n            onChange={() => {\n              setAmount(0);\n            }}\n          >\n            <TabPane tab=\"Deposit\" key=\"1\">\n              <Row justify=\"center\">\n                <Space direction=\"vertical\">\n                  <DepositWithdrawInput\n                    maxAmount={xWagmiData.wagmiV2Balance}\n                    symbol=\"WAGMI\"\n                    amount={amount}\n                    setAmount={setAmount}\n                  />\n                  <Row justify=\"end\">\n                    {xWagmiData.isApproved ? (\n                      <Button type=\"primary\" onClick={handleDeposit}>\n                        Deposit\n                      </Button>\n                    ) : (\n                      <Button type=\"primary\" onClick={handleApproval}>\n                        Approve Contract\n                      </Button>\n                    )}\n                  </Row>\n                </Space>\n              </Row>\n            </TabPane>\n            <TabPane tab=\"Withdraw\" key=\"2\">\n              <Row justify=\"center\">\n                <Space direction=\"vertical\">\n                  <DepositWithdrawInput\n                    maxAmount={xWagmiData.xWagmiBalance}\n                    symbol=\"xWAGMI\"\n                    amount={amount}\n                    setAmount={setAmount}\n                  />\n\n                  <Row justify=\"end\">\n                    <Button type=\"primary\" onClick={handleWithdraw}>\n                      Withdraw\n                    </Button>\n                  </Row>\n                </Space>\n              </Row>\n            </TabPane>\n          </Tabs>\n        </Space>\n      </Card>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { MainHeader } from \"./component/Header/Header\";\nimport { IndexPage } from \"./route\";\nimport { Web3Store } from \"./store/Web3Store\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { NgmiNftPage } from \"./route/ngmi-nft\";\nimport { AnalyticsPage } from \"./route/analytics\";\nimport { WhyWAGMIPage } from \"./route/why-wagmi\";\nimport { BridgePage } from \"./route/bridge\";\nimport { StakingPage } from \"./route/staking\";\nimport { XWagmiPage } from \"./route/xwagmi\";\n\nfunction App() {\n  return (\n    <Web3Store>\n      <Router>\n        <div>\n          <MainHeader />\n          <Switch>\n            <Route path=\"/ngmi-nft\">\n              <NgmiNftPage />\n            </Route>\n            <Route path=\"/analytics\">\n              <AnalyticsPage />\n            </Route>\n            <Route path=\"/why-wagmi\">\n              <WhyWAGMIPage />\n            </Route>\n            <Route path=\"/bridge\">\n              <BridgePage />\n            </Route>\n            <Route path=\"/xwagmi\">\n              <XWagmiPage />\n            </Route>\n            <Route path=\"/staking\">\n              <StakingPage />\n            </Route>\n            <Route path=\"/\">\n              <IndexPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Web3Store>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}