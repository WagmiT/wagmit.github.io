{"version":3,"sources":["store/Web3Store.jsx","component/ConnectWallet/ConnectWallet.jsx","component/Header/Header.jsx","route/index.jsx","route/ngmi-nft.jsx","route/analytics.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Web3Context","React","createContext","Web3Store","children","useState","account","setAccount","networkId","setNetworkId","web3","setWeb3","Provider","value","web3Modal","Web3Modal","network","cacheProvider","providerOptions","injected","options","rpc","56","chainId","ConnectWalletButton","useContext","connectWallet","a","connect","provider","Web3","eth","getAccounts","accounts","address","net","getId","className","disabled","onClick","MainHeader","title","subTitle","extra","Title","Typography","IndexPage","direction","size","span","href","target","rel","src","alt","type","justify","level","style","color","grey","primary","utils","BN","Text","ngmiAbiJson","require","NgmiNftPage","loading","setLoading","ngmiNft","setNgmiNft","useEffect","ngmiContract","Contract","methods","balanceOf","call","name","description","image","maxWidth","strong","AnalyticsPage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d7516b4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Web3Context = React.createContext({});\n\nexport const Web3Store = ({ children }) => {\n  const [account, setAccount] = React.useState(null);\n  const [networkId, setNetworkId] = React.useState(null);\n  const [web3, setWeb3] = React.useState(null);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        account,\n        setAccount,\n        networkId,\n        setNetworkId,\n        web3,\n        setWeb3,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","import React from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport { Button, Card } from \"antd\";\nimport { Web3Context } from \"../../store/Web3Store\";\nimport \"./ConnectWallet.css\";\n\nconst providerOptions = {\n  /* See Provider Options Section */\n  injected: {\n    options: {\n      rpc: {\n        56: 'https://bsc-dataseed.binance.org/'\n      },\n      network: 'binance',\n      chainId: 56,\n    }\n  },\n};\n\nconst web3Modal = new Web3Modal({\n  network: \"biannce\", // optional\n  cacheProvider: true, // optional\n  providerOptions, // required\n});\n\nexport const ConnectWalletButton = () => {\n  const { account, setAccount, setNetworkId, setWeb3} = React.useContext(Web3Context);\n\n  const connectWallet = async () => {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    const address = accounts[0];\n    const networkId = await web3.eth.net.getId();\n    setWeb3(web3);\n    setAccount(address);\n    setNetworkId(networkId);\n  };\n\n  if(account) {\n    return <div className=\"connect-wallet\" disabled>{account}</div>\n  }\n\n  return <Button onClick={connectWallet}>Connect Wallet</Button>;\n};\n","import React from \"react\";\nimport {  PageHeader } from \"antd\";\nimport { ConnectWalletButton } from \"../ConnectWallet/ConnectWallet\";\n\nexport const MainHeader = () => {\n  return (\n    <PageHeader\n      className=\"site-page-header\"\n      title=\"WAGMI\"\n      subTitle=\"We're all gonna make it\"\n      extra={[\n        <ConnectWalletButton />\n      ]}\n    />\n  );\n};\n","import React from \"react\";\nimport { Col, Row, Space, Typography } from \"antd\";\nimport { grey } from '@ant-design/colors';\n\nconst { Title } = Typography;\n\nexport const IndexPage = () => {\n  return (\n    <div>\n      <Space direction=\"vertical\" size=\"large\">\n        <Row>\n          <Col span={12}>\n            <a\n              href=\"https://bscscan.com/token/0xcddb9f34d6a48e5d051561e6d9fbfc96050cd429\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img className=\"image-zoom cover\" src=\"wagmi.png\" alt=\"WAGMI\" />\n            </a>\n          </Col>\n          <Col span={12}>\n            <a\n              href=\"https://bscscan.com/token/0xbe218b17bbf76e8d957e83265087115e2056c5a7\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img className=\"image-zoom cover\" src=\"ngmi.png\" alt=\"NGMI\" />\n            </a>\n          </Col>\n        </Row>\n      </Space>\n      <Row type=\"flex\" justify=\"center\">\n        <Col>\n          <Title level={2}>Here's what happens to WAGMI over time</Title>\n        </Col>\n      </Row>\n      <Row type=\"flex\" justify=\"center\">\n        <Col>\n          <img src=\"chart.jpg\" alt=\"chart\" className=\"cover\" />\n        </Col>\n      </Row>\n      <Row type=\"flex\" justify=\"space-around\">\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://github.com/WagmiT\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{color: grey.primary}}\n              >\n                <i className=\"bi bi-github\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://twitter.com/wagmit\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{color: grey.primary}}\n              >\n                <i className=\"bi bi-twitter\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://t.me/wagmi_together\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{color: grey.primary}}\n              >\n                <i className=\"bi bi-telegram\"></i>\n              </a>\n            </Title>\n          </Col>\n          <Col>\n            <Title level={1}>\n              <a\n                href=\"https://telegram.me/collablandbot?start=VFBDI1RFTCNDT01NIy0xMDAxNDM3ODA3Njgx\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{color: grey.primary}}\n              >\n                <i className=\"bi bi-telegram\"></i>\n              </a>\n            </Title>\n          </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport { Card, Col, Row, Space, Typography } from \"antd\";\nimport { ConnectWalletButton } from \"../component/ConnectWallet/ConnectWallet\";\nimport Web3 from \"web3\";\n\nconst BN = Web3.utils.BN;\n\nconst { Title, Text } = Typography;\nconst NGMI_NFT_CONTRACT_ADDRESS = \"0x854Bd71322Cd05e30E88e04549F91a728F49dEC7\";\nconst ngmiAbiJson = require(\"../abi/ngmi_nft.json\");\n\nexport const NgmiNftPage = () => {\n  const { web3, account } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n  const [ngmiNft, setNgmiNft] = React.useState(null);\n\n  React.useEffect(() => {\n    if (!!web3 && !!account && loading) {\n      (async () => {\n        const ngmiContract = new web3.eth.Contract(\n          ngmiAbiJson,\n          NGMI_NFT_CONTRACT_ADDRESS\n        );\n        const balanceOf = await ngmiContract.methods.balanceOf(account).call();\n        if (balanceOf !== \"0\") {\n          setNgmiNft({\n            name: \"NGMI NFT\",\n            description: \"You're not gonna make it since u sold WAGMI\",\n            image: \"https://wagmit.github.io/dicpic.jpg\",\n          });\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [account]);\n\n  if (!web3) {\n    return (\n      <Row justify=\"center\">\n        <Space size=\"large\" direction=\"vertical\">\n          <Title level={2}>Please connect your wallet to continue</Title>\n          <ConnectWalletButton />\n        </Space>\n      </Row>\n    );\n  }\n\n  if (ngmiNft) {\n    return (\n      <Row justify=\"center\">\n        <Card title=\"Shame on you\">\n          <img\n            style={{ maxWidth: \"300px\" }}\n            className=\"cover\"\n            src={ngmiNft.image}\n            alt={ngmiNft.description}\n          />\n          <br />\n          <Text strong>{ngmiNft.name}</Text>\n          <br />\n          <Text>{ngmiNft.description}</Text>\n        </Card>\n      </Row>\n    );\n  }\n  return (\n    <Row justify=\"center\">\n      <Col>\n        <Title level={2}>You don't own any NGMI NFT</Title>\n        <Text>WAGMI!</Text>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Web3Context } from \"../store/Web3Store\";\nimport { Row, Space, Spin, Typography } from \"antd\";\nimport { ConnectWalletButton } from \"../component/ConnectWallet/ConnectWallet\";\n\nconst { Title } = Typography;\nconst WAGMI_CONTRACT_ADDRESS = \"0x854bd71322cd05e30e88e04549f91a728f49dec7\";\n\nexport const AnalyticsPage = () => {\n  const { web3 } = React.useContext(Web3Context);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    if (web3) {\n      (async () => {\n        setLoading(false);\n      })();\n    }\n  }, [web3]);\n\n  if (!web3) {\n    return (\n      <Row justify=\"center\">\n        <Space size=\"large\" direction=\"vertical\">\n          <Title level={2}>Please connect your wallet to continue</Title>\n          <ConnectWalletButton />\n        </Space>\n      </Row>\n    );\n  } else if (loading) {\n    return (\n      <Row justify=\"center\">\n        <Spin size=\"large\" />\n      </Row>\n    );\n  }\n  return <Row></Row>;\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { MainHeader } from \"./component/Header/Header\";\nimport { IndexPage } from \"./route\";\nimport { Web3Store } from \"./store/Web3Store\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { NgmiNftPage } from \"./route/ngmi-nft\";\nimport {AnalyticsPage} from \"./route/analytics\"\n\nfunction App() {\n  return (\n    <Web3Store>\n      <Router>\n        <div>\n          <MainHeader />\n          <Switch>\n            <Route path=\"/ngmi-nft\">\n              <NgmiNftPage />\n            </Route>\n            <Route path=\"/analytics\"><AnalyticsPage /></Route>\n            <Route path=\"/\">\n              <IndexPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Web3Store>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}